#![allow(non_camel_case_types)]
#![allow(non_snake_case)]
#![allow(dead_code)]

use num_enum::TryFromPrimitive;

use crate::{defines::*, error::FFError};

use super::crypto::AUTH_CHALLENGE_SIZE;

pub const PACKET_MASK_CL2LS: u32 = 0x12000000;
pub const PACKET_MASK_LS2CL: u32 = 0x21000000;
pub const PACKET_MASK_CL2FE: u32 = 0x13000000;
pub const PACKET_MASK_FE2CL: u32 = 0x31000000;
pub const PACKET_MASK_LS2FE: u32 = 0x23000000;
pub const PACKET_MASK_FE2LS: u32 = 0x32000000;

#[repr(u32)]
#[derive(Debug, TryFromPrimitive, Clone, Copy, PartialEq)]
#[num_enum(error_type(name = FFError, constructor = FFError::from_enum_err))]
pub enum PacketID {
    P_NULL = 0,

    P_CL2LS_REQ_LOGIN = 0x12000001,             // 301989889
    P_CL2LS_REQ_CHECK_CHAR_NAME = 0x12000002,   // 301989890
    P_CL2LS_REQ_SAVE_CHAR_NAME = 0x12000003,    // 301989891
    P_CL2LS_REQ_CHAR_CREATE = 0x12000004,       // 301989892
    P_CL2LS_REQ_CHAR_SELECT = 0x12000005,       // 301989893
    P_CL2LS_REQ_CHAR_DELETE = 0x12000006,       // 301989894
    P_CL2LS_REQ_SHARD_SELECT = 0x12000007,      // 301989895
    P_CL2LS_REQ_SHARD_LIST_INFO = 0x12000008,   // 301989896
    P_CL2LS_CHECK_NAME_LIST = 0x12000009,       // 301989897
    P_CL2LS_REQ_SAVE_CHAR_TUTOR = 0x1200000a,   // 301989898
    P_CL2LS_REQ_PC_EXIT_DUPLICATE = 0x1200000b, // 301989899
    P_CL2LS_REP_LIVE_CHECK = 0x1200000c,        // 301989900
    P_CL2LS_REQ_CHANGE_CHAR_NAME = 0x1200000d,  // 301989901
    P_CL2LS_REQ_SERVER_SELECT = 0x1200000e,     // 301989902

    P_CL2FE_REQ_PC_ENTER = 0x13000001,                 // 318767105
    P_CL2FE_REQ_PC_EXIT = 0x13000002,                  // 318767106
    P_CL2FE_REQ_PC_MOVE = 0x13000003,                  // 318767107
    P_CL2FE_REQ_PC_STOP = 0x13000004,                  // 318767108
    P_CL2FE_REQ_PC_JUMP = 0x13000005,                  // 318767109
    P_CL2FE_REQ_PC_ATTACK_NPCs = 0x13000006,           // 318767110
    P_CL2FE_REQ_SEND_FREECHAT_MESSAGE = 0x13000007,    // 318767111
    P_CL2FE_REQ_SEND_MENUCHAT_MESSAGE = 0x13000008,    // 318767112
    P_CL2FE_REQ_PC_REGEN = 0x13000009,                 // 318767113
    P_CL2FE_REQ_ITEM_MOVE = 0x1300000a,                // 318767114
    P_CL2FE_REQ_PC_TASK_START = 0x1300000b,            // 318767115
    P_CL2FE_REQ_PC_TASK_END = 0x1300000c,              // 318767116
    P_CL2FE_REQ_NANO_EQUIP = 0x1300000d,               // 318767117
    P_CL2FE_REQ_NANO_UNEQUIP = 0x1300000e,             // 318767118
    P_CL2FE_REQ_NANO_ACTIVE = 0x1300000f,              // 318767119
    P_CL2FE_REQ_NANO_TUNE = 0x13000010,                // 318767120
    P_CL2FE_REQ_NANO_SKILL_USE = 0x13000011,           // 318767121
    P_CL2FE_REQ_PC_TASK_STOP = 0x13000012,             // 318767122
    P_CL2FE_REQ_PC_TASK_CONTINUE = 0x13000013,         // 318767123
    P_CL2FE_REQ_PC_GOTO = 0x13000014,                  // 318767124
    P_CL2FE_REQ_CHARGE_NANO_STAMINA = 0x13000015,      // 318767125
    P_CL2FE_REQ_PC_KILL_QUEST_NPCs = 0x13000016,       // 318767126
    P_CL2FE_REQ_PC_VENDOR_ITEM_BUY = 0x13000017,       // 318767127
    P_CL2FE_REQ_PC_VENDOR_ITEM_SELL = 0x13000018,      // 318767128
    P_CL2FE_REQ_PC_ITEM_DELETE = 0x13000019,           // 318767129
    P_CL2FE_REQ_PC_GIVE_ITEM = 0x1300001a,             // 318767130
    P_CL2FE_REQ_PC_ROCKET_STYLE_READY = 0x1300001b,    // 318767131
    P_CL2FE_REQ_PC_ROCKET_STYLE_FIRE = 0x1300001c,     // 318767132
    P_CL2FE_REQ_PC_ROCKET_STYLE_HIT = 0x1300001d,      // 318767133
    P_CL2FE_REQ_PC_GRENADE_STYLE_READY = 0x1300001e,   // 318767134
    P_CL2FE_REQ_PC_GRENADE_STYLE_FIRE = 0x1300001f,    // 318767135
    P_CL2FE_REQ_PC_GRENADE_STYLE_HIT = 0x13000020,     // 318767136
    P_CL2FE_REQ_PC_NANO_CREATE = 0x13000021,           // 318767137
    P_CL2FE_REQ_PC_TRADE_OFFER = 0x13000022,           // 318767138
    P_CL2FE_REQ_PC_TRADE_OFFER_CANCEL = 0x13000023,    // 318767139
    P_CL2FE_REQ_PC_TRADE_OFFER_ACCEPT = 0x13000024,    // 318767140
    P_CL2FE_REQ_PC_TRADE_OFFER_REFUSAL = 0x13000025,   // 318767141
    P_CL2FE_REQ_PC_TRADE_OFFER_ABORT = 0x13000026,     // 318767142
    P_CL2FE_REQ_PC_TRADE_CONFIRM = 0x13000027,         // 318767143
    P_CL2FE_REQ_PC_TRADE_CONFIRM_CANCEL = 0x13000028,  // 318767144
    P_CL2FE_REQ_PC_TRADE_CONFIRM_ABORT = 0x13000029,   // 318767145
    P_CL2FE_REQ_PC_TRADE_ITEM_REGISTER = 0x1300002a,   // 318767146
    P_CL2FE_REQ_PC_TRADE_ITEM_UNREGISTER = 0x1300002b, // 318767147
    P_CL2FE_REQ_PC_TRADE_CASH_REGISTER = 0x1300002c,   // 318767148
    P_CL2FE_REQ_PC_TRADE_EMOTES_CHAT = 0x1300002d,     // 318767149
    P_CL2FE_REQ_PC_BANK_OPEN = 0x1300002e,             // 318767150
    P_CL2FE_REQ_PC_BANK_CLOSE = 0x1300002f,            // 318767151
    P_CL2FE_REQ_PC_VENDOR_START = 0x13000030,          // 318767152
    P_CL2FE_REQ_PC_VENDOR_TABLE_UPDATE = 0x13000031,   // 318767153
    P_CL2FE_REQ_PC_VENDOR_ITEM_RESTORE_BUY = 0x13000032, // 318767154
    P_CL2FE_REQ_PC_COMBAT_BEGIN = 0x13000033,          // 318767155
    P_CL2FE_REQ_PC_COMBAT_END = 0x13000034,            // 318767156
    P_CL2FE_REQ_REQUEST_MAKE_BUDDY = 0x13000035,       // 318767157
    P_CL2FE_REQ_ACCEPT_MAKE_BUDDY = 0x13000036,        // 318767158
    P_CL2FE_REQ_SEND_BUDDY_FREECHAT_MESSAGE = 0x13000037, // 318767159
    P_CL2FE_REQ_SEND_BUDDY_MENUCHAT_MESSAGE = 0x13000038, // 318767160
    P_CL2FE_REQ_GET_BUDDY_STYLE = 0x13000039,          // 318767161
    P_CL2FE_REQ_SET_BUDDY_BLOCK = 0x1300003a,          // 318767162
    P_CL2FE_REQ_REMOVE_BUDDY = 0x1300003b,             // 318767163
    P_CL2FE_REQ_GET_BUDDY_STATE = 0x1300003c,          // 318767164
    P_CL2FE_REQ_PC_JUMPPAD = 0x1300003d,               // 318767165
    P_CL2FE_REQ_PC_LAUNCHER = 0x1300003e,              // 318767166
    P_CL2FE_REQ_PC_ZIPLINE = 0x1300003f,               // 318767167
    P_CL2FE_REQ_PC_MOVEPLATFORM = 0x13000040,          // 318767168
    P_CL2FE_REQ_PC_SLOPE = 0x13000041,                 // 318767169
    P_CL2FE_REQ_PC_STATE_CHANGE = 0x13000042,          // 318767170
    P_CL2FE_REQ_PC_MAP_WARP = 0x13000043,              // 318767171
    P_CL2FE_REQ_PC_GIVE_NANO = 0x13000044,             // 318767172
    P_CL2FE_REQ_NPC_SUMMON = 0x13000045,               // 318767173
    P_CL2FE_REQ_NPC_UNSUMMON = 0x13000046,             // 318767174
    P_CL2FE_REQ_ITEM_CHEST_OPEN = 0x13000047,          // 318767175
    P_CL2FE_REQ_PC_GIVE_NANO_SKILL = 0x13000048,       // 318767176
    P_CL2FE_DOT_DAMAGE_ONOFF = 0x13000049,             // 318767177
    P_CL2FE_REQ_PC_VENDOR_BATTERY_BUY = 0x1300004a,    // 318767178
    P_CL2FE_REQ_PC_WARP_USE_NPC = 0x1300004b,          // 318767179
    P_CL2FE_REQ_PC_GROUP_INVITE = 0x1300004c,          // 318767180
    P_CL2FE_REQ_PC_GROUP_INVITE_REFUSE = 0x1300004d,   // 318767181
    P_CL2FE_REQ_PC_GROUP_JOIN = 0x1300004e,            // 318767182
    P_CL2FE_REQ_PC_GROUP_LEAVE = 0x1300004f,           // 318767183
    P_CL2FE_REQ_PC_AVATAR_EMOTES_CHAT = 0x13000050,    // 318767184
    P_CL2FE_REQ_PC_BUDDY_WARP = 0x13000051,            // 318767185
    P_CL2FE_REQ_GET_MEMBER_STYLE = 0x13000052,         // 318767186
    P_CL2FE_REQ_GET_GROUP_STYLE = 0x13000053,          // 318767187
    P_CL2FE_REQ_PC_CHANGE_MENTOR = 0x13000054,         // 318767188
    P_CL2FE_REQ_GET_BUDDY_LOCATION = 0x13000055,       // 318767189
    P_CL2FE_REQ_NPC_GROUP_SUMMON = 0x13000056,         // 318767190
    P_CL2FE_REQ_PC_WARP_TO_PC = 0x13000057,            // 318767191
    P_CL2FE_REQ_EP_RANK_GET_LIST = 0x13000058,         // 318767192
    P_CL2FE_REQ_EP_RANK_GET_DETAIL = 0x13000059,       // 318767193
    P_CL2FE_REQ_EP_RANK_GET_PC_INFO = 0x1300005a,      // 318767194
    P_CL2FE_REQ_EP_RACE_START = 0x1300005b,            // 318767195
    P_CL2FE_REQ_EP_RACE_END = 0x1300005c,              // 318767196
    P_CL2FE_REQ_EP_RACE_CANCEL = 0x1300005d,           // 318767197
    P_CL2FE_REQ_EP_GET_RING = 0x1300005e,              // 318767198
    P_CL2FE_REQ_IM_CHANGE_SWITCH_STATUS = 0x1300005f,  // 318767199
    P_CL2FE_REQ_SHINY_PICKUP = 0x13000060,             // 318767200
    P_CL2FE_REQ_SHINY_SUMMON = 0x13000061,             // 318767201
    P_CL2FE_REQ_PC_MOVETRANSPORTATION = 0x13000062,    // 318767202
    P_CL2FE_REQ_SEND_ALL_GROUP_FREECHAT_MESSAGE = 0x13000063, // 318767203
    P_CL2FE_REQ_SEND_ANY_GROUP_FREECHAT_MESSAGE = 0x13000064, // 318767204
    P_CL2FE_REQ_BARKER = 0x13000065,                   // 318767205
    P_CL2FE_REQ_SEND_ALL_GROUP_MENUCHAT_MESSAGE = 0x13000066, // 318767206
    P_CL2FE_REQ_SEND_ANY_GROUP_MENUCHAT_MESSAGE = 0x13000067, // 318767207
    P_CL2FE_REQ_REGIST_TRANSPORTATION_LOCATION = 0x13000068, // 318767208
    P_CL2FE_REQ_PC_WARP_USE_TRANSPORTATION = 0x13000069, // 318767209
    P_CL2FE_GM_REQ_PC_SPECIAL_STATE_SWITCH = 0x1300006a, // 318767210
    P_CL2FE_GM_REQ_PC_SET_VALUE = 0x1300006b,          // 318767211
    P_CL2FE_GM_REQ_KICK_PLAYER = 0x1300006c,           // 318767212
    P_CL2FE_GM_REQ_TARGET_PC_TELEPORT = 0x1300006d,    // 318767213
    P_CL2FE_GM_REQ_PC_LOCATION = 0x1300006e,           // 318767214
    P_CL2FE_GM_REQ_PC_ANNOUNCE = 0x1300006f,           // 318767215
    P_CL2FE_REQ_SET_PC_BLOCK = 0x13000070,             // 318767216
    P_CL2FE_REQ_REGIST_RXCOM = 0x13000071,             // 318767217
    P_CL2FE_GM_REQ_PC_MOTD_REGISTER = 0x13000072,      // 318767218
    P_CL2FE_REQ_ITEM_USE = 0x13000073,                 // 318767219
    P_CL2FE_REQ_WARP_USE_RECALL = 0x13000074,          // 318767220
    P_CL2FE_REP_LIVE_CHECK = 0x13000075,               // 318767221
    P_CL2FE_REQ_PC_MISSION_COMPLETE = 0x13000076,      // 318767222
    P_CL2FE_REQ_PC_TASK_COMPLETE = 0x13000077,         // 318767223
    P_CL2FE_REQ_NPC_INTERACTION = 0x13000078,          // 318767224
    P_CL2FE_DOT_HEAL_ONOFF = 0x13000079,               // 318767225
    P_CL2FE_REQ_PC_SPECIAL_STATE_SWITCH = 0x1300007a,  // 318767226
    P_CL2FE_REQ_PC_EMAIL_UPDATE_CHECK = 0x1300007b,    // 318767227
    P_CL2FE_REQ_PC_READ_EMAIL = 0x1300007c,            // 318767228
    P_CL2FE_REQ_PC_RECV_EMAIL_PAGE_LIST = 0x1300007d,  // 318767229
    P_CL2FE_REQ_PC_DELETE_EMAIL = 0x1300007e,          // 318767230
    P_CL2FE_REQ_PC_SEND_EMAIL = 0x1300007f,            // 318767231
    P_CL2FE_REQ_PC_RECV_EMAIL_ITEM = 0x13000080,       // 318767232
    P_CL2FE_REQ_PC_RECV_EMAIL_CANDY = 0x13000081,      // 318767233
    P_CL2FE_GM_REQ_TARGET_PC_SPECIAL_STATE_ONOFF = 0x13000082, // 318767234
    P_CL2FE_REQ_PC_SET_CURRENT_MISSION_ID = 0x13000083, // 318767235
    P_CL2FE_REQ_NPC_GROUP_INVITE = 0x13000084,         // 318767236
    P_CL2FE_REQ_NPC_GROUP_KICK = 0x13000085,           // 318767237
    P_CL2FE_REQ_PC_FIRST_USE_FLAG_SET = 0x13000086,    // 318767238
    P_CL2FE_REQ_PC_TRANSPORT_WARP = 0x13000087,        // 318767239
    P_CL2FE_REQ_PC_TIME_TO_GO_WARP = 0x13000088,       // 318767240
    P_CL2FE_REQ_PC_RECV_EMAIL_ITEM_ALL = 0x13000089,   // 318767241
    P_CL2FE_REQ_CHANNEL_INFO = 0x1300008a,             // 318767242
    P_CL2FE_REQ_PC_CHANNEL_NUM = 0x1300008b,           // 318767243
    P_CL2FE_REQ_PC_WARP_CHANNEL = 0x1300008c,          // 318767244
    P_CL2FE_REQ_PC_LOADING_COMPLETE = 0x1300008d,      // 318767245
    P_CL2FE_REQ_PC_FIND_NAME_MAKE_BUDDY = 0x1300008e,  // 318767246
    P_CL2FE_REQ_PC_FIND_NAME_ACCEPT_BUDDY = 0x1300008f, // 318767247
    P_CL2FE_REQ_PC_ATTACK_CHARs = 0x13000090,          // 318767248
    P_CL2FE_PC_STREETSTALL_REQ_READY = 0x13000091,     // 318767249
    P_CL2FE_PC_STREETSTALL_REQ_CANCEL = 0x13000092,    // 318767250
    P_CL2FE_PC_STREETSTALL_REQ_REGIST_ITEM = 0x13000093, // 318767251
    P_CL2FE_PC_STREETSTALL_REQ_UNREGIST_ITEM = 0x13000094, // 318767252
    P_CL2FE_PC_STREETSTALL_REQ_SALE_START = 0x13000095, // 318767253
    P_CL2FE_PC_STREETSTALL_REQ_ITEM_LIST = 0x13000096, // 318767254
    P_CL2FE_PC_STREETSTALL_REQ_ITEM_BUY = 0x13000097,  // 318767255
    P_CL2FE_REQ_PC_ITEM_COMBINATION = 0x13000098,      // 318767256
    P_CL2FE_GM_REQ_SET_PC_SKILL = 0x13000099,          // 318767257
    P_CL2FE_REQ_PC_SKILL_ADD = 0x1300009a,             // 318767258
    P_CL2FE_REQ_PC_SKILL_DEL = 0x1300009b,             // 318767259
    P_CL2FE_REQ_PC_SKILL_USE = 0x1300009c,             // 318767260
    P_CL2FE_REQ_PC_ROPE = 0x1300009d,                  // 318767261
    P_CL2FE_REQ_PC_BELT = 0x1300009e,                  // 318767262
    P_CL2FE_REQ_PC_VEHICLE_ON = 0x1300009f,            // 318767263
    P_CL2FE_REQ_PC_VEHICLE_OFF = 0x130000a0,           // 318767264
    P_CL2FE_REQ_PC_REGIST_QUICK_SLOT = 0x130000a1,     // 318767265
    P_CL2FE_REQ_PC_DISASSEMBLE_ITEM = 0x130000a2,      // 318767266
    P_CL2FE_GM_REQ_REWARD_RATE = 0x130000a3,           // 318767267
    P_CL2FE_REQ_PC_ITEM_ENCHANT = 0x130000a4,          // 318767268

    P_FE2CL_ERROR = 0x31000000,                                // 822083584
    P_FE2CL_REP_PC_ENTER_FAIL = 0x31000001,                    // 822083585
    P_FE2CL_REP_PC_ENTER_SUCC = 0x31000002,                    // 822083586
    P_FE2CL_PC_NEW = 0x31000003,                               // 822083587
    P_FE2CL_REP_PC_EXIT_FAIL = 0x31000004,                     // 822083588
    P_FE2CL_REP_PC_EXIT_SUCC = 0x31000005,                     // 822083589
    P_FE2CL_PC_EXIT = 0x31000006,                              // 822083590
    P_FE2CL_PC_AROUND = 0x31000007,                            // 822083591
    P_FE2CL_PC_MOVE = 0x31000008,                              // 822083592
    P_FE2CL_PC_STOP = 0x31000009,                              // 822083593
    P_FE2CL_PC_JUMP = 0x3100000a,                              // 822083594
    P_FE2CL_NPC_ENTER = 0x3100000b,                            // 822083595
    P_FE2CL_NPC_EXIT = 0x3100000c,                             // 822083596
    P_FE2CL_NPC_MOVE = 0x3100000d,                             // 822083597
    P_FE2CL_NPC_NEW = 0x3100000e,                              // 822083598
    P_FE2CL_NPC_AROUND = 0x3100000f,                           // 822083599
    P_FE2CL_AROUND_DEL_PC = 0x31000010,                        // 822083600
    P_FE2CL_AROUND_DEL_NPC = 0x31000011,                       // 822083601
    P_FE2CL_REP_SEND_FREECHAT_MESSAGE_SUCC = 0x31000012,       // 822083602
    P_FE2CL_REP_SEND_FREECHAT_MESSAGE_FAIL = 0x31000013,       // 822083603
    P_FE2CL_PC_ATTACK_NPCs_SUCC = 0x31000014,                  // 822083604
    P_FE2CL_PC_ATTACK_NPCs = 0x31000015,                       // 822083605
    P_FE2CL_NPC_ATTACK_PCs = 0x31000016,                       // 822083606
    P_FE2CL_REP_PC_REGEN_SUCC = 0x31000017,                    // 822083607
    P_FE2CL_REP_SEND_MENUCHAT_MESSAGE_SUCC = 0x31000018,       // 822083608
    P_FE2CL_REP_SEND_MENUCHAT_MESSAGE_FAIL = 0x31000019,       // 822083609
    P_FE2CL_PC_ITEM_MOVE_SUCC = 0x3100001a,                    // 822083610
    P_FE2CL_PC_EQUIP_CHANGE = 0x3100001b,                      // 822083611
    P_FE2CL_REP_PC_TASK_START_SUCC = 0x3100001c,               // 822083612
    P_FE2CL_REP_PC_TASK_START_FAIL = 0x3100001d,               // 822083613
    P_FE2CL_REP_PC_TASK_END_SUCC = 0x3100001e,                 // 822083614
    P_FE2CL_REP_PC_TASK_END_FAIL = 0x3100001f,                 // 822083615
    P_FE2CL_NPC_SKILL_READY = 0x31000020,                      // 822083616
    P_FE2CL_NPC_SKILL_FIRE = 0x31000021,                       // 822083617
    P_FE2CL_NPC_SKILL_HIT = 0x31000022,                        // 822083618
    P_FE2CL_NPC_SKILL_CORRUPTION_READY = 0x31000023,           // 822083619
    P_FE2CL_NPC_SKILL_CORRUPTION_HIT = 0x31000024,             // 822083620
    P_FE2CL_NPC_SKILL_CANCEL = 0x31000025,                     // 822083621
    P_FE2CL_REP_NANO_EQUIP_SUCC = 0x31000026,                  // 822083622
    P_FE2CL_REP_NANO_UNEQUIP_SUCC = 0x31000027,                // 822083623
    P_FE2CL_REP_NANO_ACTIVE_SUCC = 0x31000028,                 // 822083624
    P_FE2CL_REP_NANO_TUNE_SUCC = 0x31000029,                   // 822083625
    P_FE2CL_NANO_ACTIVE = 0x3100002a,                          // 822083626
    P_FE2CL_NANO_SKILL_USE_SUCC = 0x3100002b,                  // 822083627
    P_FE2CL_NANO_SKILL_USE = 0x3100002c,                       // 822083628
    P_FE2CL_REP_PC_TASK_STOP_SUCC = 0x3100002d,                // 822083629
    P_FE2CL_REP_PC_TASK_STOP_FAIL = 0x3100002e,                // 822083630
    P_FE2CL_REP_PC_TASK_CONTINUE_SUCC = 0x3100002f,            // 822083631
    P_FE2CL_REP_PC_TASK_CONTINUE_FAIL = 0x31000030,            // 822083632
    P_FE2CL_REP_PC_GOTO_SUCC = 0x31000031,                     // 822083633
    P_FE2CL_REP_CHARGE_NANO_STAMINA = 0x31000032,              // 822083634
    P_FE2CL_REP_PC_TICK = 0x31000033,                          // 822083635
    P_FE2CL_REP_PC_KILL_QUEST_NPCs_SUCC = 0x31000034,          // 822083636
    P_FE2CL_REP_PC_VENDOR_ITEM_BUY_SUCC = 0x31000035,          // 822083637
    P_FE2CL_REP_PC_VENDOR_ITEM_BUY_FAIL = 0x31000036,          // 822083638
    P_FE2CL_REP_PC_VENDOR_ITEM_SELL_SUCC = 0x31000037,         // 822083639
    P_FE2CL_REP_PC_VENDOR_ITEM_SELL_FAIL = 0x31000038,         // 822083640
    P_FE2CL_REP_PC_ITEM_DELETE_SUCC = 0x31000039,              // 822083641
    P_FE2CL_PC_ROCKET_STYLE_READY = 0x3100003a,                // 822083642
    P_FE2CL_REP_PC_ROCKET_STYLE_FIRE_SUCC = 0x3100003b,        // 822083643
    P_FE2CL_PC_ROCKET_STYLE_FIRE = 0x3100003c,                 // 822083644
    P_FE2CL_PC_ROCKET_STYLE_HIT = 0x3100003d,                  // 822083645
    P_FE2CL_PC_GRENADE_STYLE_READY = 0x3100003e,               // 822083646
    P_FE2CL_REP_PC_GRENADE_STYLE_FIRE_SUCC = 0x3100003f,       // 822083647
    P_FE2CL_PC_GRENADE_STYLE_FIRE = 0x31000040,                // 822083648
    P_FE2CL_PC_GRENADE_STYLE_HIT = 0x31000041,                 // 822083649
    P_FE2CL_REP_PC_TRADE_OFFER = 0x31000042,                   // 822083650
    P_FE2CL_REP_PC_TRADE_OFFER_CANCEL = 0x31000043,            // 822083651
    P_FE2CL_REP_PC_TRADE_OFFER_SUCC = 0x31000044,              // 822083652
    P_FE2CL_REP_PC_TRADE_OFFER_REFUSAL = 0x31000045,           // 822083653
    P_FE2CL_REP_PC_TRADE_OFFER_ABORT = 0x31000046,             // 822083654
    P_FE2CL_REP_PC_TRADE_CONFIRM = 0x31000047,                 // 822083655
    P_FE2CL_REP_PC_TRADE_CONFIRM_CANCEL = 0x31000048,          // 822083656
    P_FE2CL_REP_PC_TRADE_CONFIRM_ABORT = 0x31000049,           // 822083657
    P_FE2CL_REP_PC_TRADE_CONFIRM_SUCC = 0x3100004a,            // 822083658
    P_FE2CL_REP_PC_TRADE_CONFIRM_FAIL = 0x3100004b,            // 822083659
    P_FE2CL_REP_PC_TRADE_ITEM_REGISTER_SUCC = 0x3100004c,      // 822083660
    P_FE2CL_REP_PC_TRADE_ITEM_REGISTER_FAIL = 0x3100004d,      // 822083661
    P_FE2CL_REP_PC_TRADE_ITEM_UNREGISTER_SUCC = 0x3100004e,    // 822083662
    P_FE2CL_REP_PC_TRADE_ITEM_UNREGISTER_FAIL = 0x3100004f,    // 822083663
    P_FE2CL_REP_PC_TRADE_CASH_REGISTER_SUCC = 0x31000050,      // 822083664
    P_FE2CL_REP_PC_TRADE_CASH_REGISTER_FAIL = 0x31000051,      // 822083665
    P_FE2CL_REP_PC_TRADE_EMOTES_CHAT = 0x31000052,             // 822083666
    P_FE2CL_REP_PC_NANO_CREATE_SUCC = 0x31000053,              // 822083667
    P_FE2CL_REP_PC_NANO_CREATE_FAIL = 0x31000054,              // 822083668
    P_FE2CL_REP_NANO_TUNE_FAIL = 0x31000055,                   // 822083669
    P_FE2CL_REP_PC_BANK_OPEN_SUCC = 0x31000056,                // 822083670
    P_FE2CL_REP_PC_BANK_OPEN_FAIL = 0x31000057,                // 822083671
    P_FE2CL_REP_PC_BANK_CLOSE_SUCC = 0x31000058,               // 822083672
    P_FE2CL_REP_PC_BANK_CLOSE_FAIL = 0x31000059,               // 822083673
    P_FE2CL_REP_PC_VENDOR_START_SUCC = 0x3100005a,             // 822083674
    P_FE2CL_REP_PC_VENDOR_START_FAIL = 0x3100005b,             // 822083675
    P_FE2CL_REP_PC_VENDOR_TABLE_UPDATE_SUCC = 0x3100005c,      // 822083676
    P_FE2CL_REP_PC_VENDOR_TABLE_UPDATE_FAIL = 0x3100005d,      // 822083677
    P_FE2CL_REP_PC_VENDOR_ITEM_RESTORE_BUY_SUCC = 0x3100005e,  // 822083678
    P_FE2CL_REP_PC_VENDOR_ITEM_RESTORE_BUY_FAIL = 0x3100005f,  // 822083679
    P_FE2CL_CHAR_TIME_BUFF_TIME_OUT = 0x31000060,              // 822083680
    P_FE2CL_REP_PC_GIVE_ITEM_SUCC = 0x31000061,                // 822083681
    P_FE2CL_REP_PC_GIVE_ITEM_FAIL = 0x31000062,                // 822083682
    P_FE2CL_REP_PC_BUDDYLIST_INFO_SUCC = 0x31000063,           // 822083683
    P_FE2CL_REP_PC_BUDDYLIST_INFO_FAIL = 0x31000064,           // 822083684
    P_FE2CL_REP_REQUEST_MAKE_BUDDY_SUCC = 0x7fffffff,          // 2147483647
    P_FE2CL_REP_REQUEST_MAKE_BUDDY_FAIL = 0x31000066,          // 822083686
    P_FE2CL_REP_ACCEPT_MAKE_BUDDY_SUCC = 0x31000067,           // 822083687
    P_FE2CL_REP_ACCEPT_MAKE_BUDDY_FAIL = 0x31000068,           // 822083688
    P_FE2CL_REP_SEND_BUDDY_FREECHAT_MESSAGE_SUCC = 0x31000069, // 822083689
    P_FE2CL_REP_SEND_BUDDY_FREECHAT_MESSAGE_FAIL = 0x3100006a, // 822083690
    P_FE2CL_REP_SEND_BUDDY_MENUCHAT_MESSAGE_SUCC = 0x3100006b, // 822083691
    P_FE2CL_REP_SEND_BUDDY_MENUCHAT_MESSAGE_FAIL = 0x3100006c, // 822083692
    P_FE2CL_REP_GET_BUDDY_STYLE_SUCC = 0x3100006d,             // 822083693
    P_FE2CL_REP_GET_BUDDY_STYLE_FAIL = 0x3100006e,             // 822083694
    P_FE2CL_REP_GET_BUDDY_STATE_SUCC = 0x3100006f,             // 822083695
    P_FE2CL_REP_GET_BUDDY_STATE_FAIL = 0x31000070,             // 822083696
    P_FE2CL_REP_SET_BUDDY_BLOCK_SUCC = 0x31000071,             // 822083697
    P_FE2CL_REP_SET_BUDDY_BLOCK_FAIL = 0x31000072,             // 822083698
    P_FE2CL_REP_REMOVE_BUDDY_SUCC = 0x31000073,                // 822083699
    P_FE2CL_REP_REMOVE_BUDDY_FAIL = 0x31000074,                // 822083700
    P_FE2CL_PC_JUMPPAD = 0x31000075,                           // 822083701
    P_FE2CL_PC_LAUNCHER = 0x31000076,                          // 822083702
    P_FE2CL_PC_ZIPLINE = 0x31000077,                           // 822083703
    P_FE2CL_PC_MOVEPLATFORM = 0x31000078,                      // 822083704
    P_FE2CL_PC_SLOPE = 0x31000079,                             // 822083705
    P_FE2CL_PC_STATE_CHANGE = 0x3100007a,                      // 822083706
    P_FE2CL_REP_REQUEST_MAKE_BUDDY_SUCC_TO_ACCEPTER = 0x3100007b, // 822083707
    P_FE2CL_REP_REWARD_ITEM = 0x3100007c,                      // 822083708
    P_FE2CL_REP_ITEM_CHEST_OPEN_SUCC = 0x3100007d,             // 822083709
    P_FE2CL_REP_ITEM_CHEST_OPEN_FAIL = 0x3100007e,             // 822083710
    P_FE2CL_CHAR_TIME_BUFF_TIME_TICK = 0x3100007f,             // 822083711
    P_FE2CL_REP_PC_VENDOR_BATTERY_BUY_SUCC = 0x31000080,       // 822083712
    P_FE2CL_REP_PC_VENDOR_BATTERY_BUY_FAIL = 0x31000081,       // 822083713
    P_FE2CL_NPC_ROCKET_STYLE_FIRE = 0x31000082,                // 822083714
    P_FE2CL_NPC_GRENADE_STYLE_FIRE = 0x31000083,               // 822083715
    P_FE2CL_NPC_BULLET_STYLE_HIT = 0x31000084,                 // 822083716
    P_FE2CL_CHARACTER_ATTACK_CHARACTERs = 0x31000085,          // 822083717
    P_FE2CL_PC_GROUP_INVITE = 0x31000086,                      // 822083718
    P_FE2CL_PC_GROUP_INVITE_FAIL = 0x31000087,                 // 822083719
    P_FE2CL_PC_GROUP_INVITE_REFUSE = 0x31000088,               // 822083720
    P_FE2CL_PC_GROUP_JOIN = 0x31000089,                        // 822083721
    P_FE2CL_PC_GROUP_JOIN_FAIL = 0x3100008a,                   // 822083722
    P_FE2CL_PC_GROUP_JOIN_SUCC = 0x3100008b,                   // 822083723
    P_FE2CL_PC_GROUP_LEAVE = 0x3100008c,                       // 822083724
    P_FE2CL_PC_GROUP_LEAVE_FAIL = 0x3100008d,                  // 822083725
    P_FE2CL_PC_GROUP_LEAVE_SUCC = 0x3100008e,                  // 822083726
    P_FE2CL_PC_GROUP_MEMBER_INFO = 0x3100008f,                 // 822083727
    P_FE2CL_REP_PC_WARP_USE_NPC_SUCC = 0x31000090,             // 822083728
    P_FE2CL_REP_PC_WARP_USE_NPC_FAIL = 0x31000091,             // 822083729
    P_FE2CL_REP_PC_AVATAR_EMOTES_CHAT = 0x31000092,            // 822083730
    P_FE2CL_REP_PC_CHANGE_MENTOR_SUCC = 0x31000093,            // 822083731
    P_FE2CL_REP_PC_CHANGE_MENTOR_FAIL = 0x31000094,            // 822083732
    P_FE2CL_REP_GET_MEMBER_STYLE_FAIL = 0x31000095,            // 822083733
    P_FE2CL_REP_GET_MEMBER_STYLE_SUCC = 0x31000096,            // 822083734
    P_FE2CL_REP_GET_GROUP_STYLE_FAIL = 0x31000097,             // 822083735
    P_FE2CL_REP_GET_GROUP_STYLE_SUCC = 0x31000098,             // 822083736
    P_FE2CL_PC_REGEN = 0x31000099,                             // 822083737
    P_FE2CL_INSTANCE_MAP_INFO = 0x3100009a,                    // 822083738
    P_FE2CL_TRANSPORTATION_ENTER = 0x3100009b,                 // 822083739
    P_FE2CL_TRANSPORTATION_EXIT = 0x3100009c,                  // 822083740
    P_FE2CL_TRANSPORTATION_MOVE = 0x3100009d,                  // 822083741
    P_FE2CL_TRANSPORTATION_NEW = 0x3100009e,                   // 822083742
    P_FE2CL_TRANSPORTATION_AROUND = 0x3100009f,                // 822083743
    P_FE2CL_AROUND_DEL_TRANSPORTATION = 0x310000a0,            // 822083744
    P_FE2CL_REP_EP_RANK_LIST = 0x310000a1,                     // 822083745
    P_FE2CL_REP_EP_RANK_DETAIL = 0x310000a2,                   // 822083746
    P_FE2CL_REP_EP_RANK_PC_INFO = 0x310000a3,                  // 822083747
    P_FE2CL_REP_EP_RACE_START_SUCC = 0x310000a4,               // 822083748
    P_FE2CL_REP_EP_RACE_START_FAIL = 0x310000a5,               // 822083749
    P_FE2CL_REP_EP_RACE_END_SUCC = 0x310000a6,                 // 822083750
    P_FE2CL_REP_EP_RACE_END_FAIL = 0x310000a7,                 // 822083751
    P_FE2CL_REP_EP_RACE_CANCEL_SUCC = 0x310000a8,              // 822083752
    P_FE2CL_REP_EP_RACE_CANCEL_FAIL = 0x310000a9,              // 822083753
    P_FE2CL_REP_EP_GET_RING_SUCC = 0x310000aa,                 // 822083754
    P_FE2CL_REP_EP_GET_RING_FAIL = 0x310000ab,                 // 822083755
    P_FE2CL_REP_IM_CHANGE_SWITCH_STATUS = 0x310000ac,          // 822083756
    P_FE2CL_SHINY_ENTER = 0x310000ad,                          // 822083757
    P_FE2CL_SHINY_EXIT = 0x310000ae,                           // 822083758
    P_FE2CL_SHINY_NEW = 0x310000af,                            // 822083759
    P_FE2CL_SHINY_AROUND = 0x310000b0,                         // 822083760
    P_FE2CL_AROUND_DEL_SHINY = 0x310000b1,                     // 822083761
    P_FE2CL_REP_SHINY_PICKUP_FAIL = 0x310000b2,                // 822083762
    P_FE2CL_REP_SHINY_PICKUP_SUCC = 0x310000b3,                // 822083763
    P_FE2CL_PC_MOVETRANSPORTATION = 0x310000b4,                // 822083764
    P_FE2CL_REP_SEND_ALL_GROUP_FREECHAT_MESSAGE_SUCC = 0x310000b5, // 822083765
    P_FE2CL_REP_SEND_ALL_GROUP_FREECHAT_MESSAGE_FAIL = 0x310000b6, // 822083766
    P_FE2CL_REP_SEND_ANY_GROUP_FREECHAT_MESSAGE_SUCC = 0x310000b7, // 822083767
    P_FE2CL_REP_SEND_ANY_GROUP_FREECHAT_MESSAGE_FAIL = 0x310000b8, // 822083768
    P_FE2CL_REP_BARKER = 0x310000b9,                           // 822083769
    P_FE2CL_REP_SEND_ALL_GROUP_MENUCHAT_MESSAGE_SUCC = 0x310000ba, // 822083770
    P_FE2CL_REP_SEND_ALL_GROUP_MENUCHAT_MESSAGE_FAIL = 0x310000bb, // 822083771
    P_FE2CL_REP_SEND_ANY_GROUP_MENUCHAT_MESSAGE_SUCC = 0x310000bc, // 822083772
    P_FE2CL_REP_SEND_ANY_GROUP_MENUCHAT_MESSAGE_FAIL = 0x310000bd, // 822083773
    P_FE2CL_REP_PC_REGIST_TRANSPORTATION_LOCATION_FAIL = 0x310000be, // 822083774
    P_FE2CL_REP_PC_REGIST_TRANSPORTATION_LOCATION_SUCC = 0x310000bf, // 822083775
    P_FE2CL_REP_PC_WARP_USE_TRANSPORTATION_FAIL = 0x310000c0,  // 822083776
    P_FE2CL_REP_PC_WARP_USE_TRANSPORTATION_SUCC = 0x310000c1,  // 822083777
    P_FE2CL_ANNOUNCE_MSG = 0x310000c2,                         // 822083778
    P_FE2CL_REP_PC_SPECIAL_STATE_SWITCH_SUCC = 0x310000c3,     // 822083779
    P_FE2CL_PC_SPECIAL_STATE_CHANGE = 0x310000c4,              // 822083780
    P_FE2CL_GM_REP_PC_SET_VALUE = 0x310000c5,                  // 822083781
    P_FE2CL_GM_PC_CHANGE_VALUE = 0x310000c6,                   // 822083782
    P_FE2CL_GM_REP_PC_LOCATION = 0x310000c7,                   // 822083783
    P_FE2CL_GM_REP_PC_ANNOUNCE = 0x310000c8,                   // 822083784
    P_FE2CL_REP_PC_BUDDY_WARP_FAIL = 0x310000c9,               // 822083785
    P_FE2CL_REP_PC_CHANGE_LEVEL = 0x310000ca,                  // 822083786
    P_FE2CL_REP_SET_PC_BLOCK_SUCC = 0x310000cb,                // 822083787
    P_FE2CL_REP_SET_PC_BLOCK_FAIL = 0x310000cc,                // 822083788
    P_FE2CL_REP_REGIST_RXCOM = 0x310000cd,                     // 822083789
    P_FE2CL_REP_REGIST_RXCOM_FAIL = 0x310000ce,                // 822083790
    P_FE2CL_PC_INVEN_FULL_MSG = 0x310000cf,                    // 822083791
    P_FE2CL_REQ_LIVE_CHECK = 0x310000d0,                       // 822083792
    P_FE2CL_PC_MOTD_LOGIN = 0x310000d1,                        // 822083793
    P_FE2CL_REP_PC_ITEM_USE_FAIL = 0x310000d2,                 // 822083794
    P_FE2CL_REP_PC_ITEM_USE_SUCC = 0x310000d3,                 // 822083795
    P_FE2CL_PC_ITEM_USE = 0x310000d4,                          // 822083796
    P_FE2CL_REP_GET_BUDDY_LOCATION_SUCC = 0x310000d5,          // 822083797
    P_FE2CL_REP_GET_BUDDY_LOCATION_FAIL = 0x310000d6,          // 822083798
    P_FE2CL_REP_PC_RIDING_FAIL = 0x310000d7,                   // 822083799
    P_FE2CL_REP_PC_RIDING_SUCC = 0x310000d8,                   // 822083800
    P_FE2CL_PC_RIDING = 0x310000d9,                            // 822083801
    P_FE2CL_PC_BROOMSTICK_MOVE = 0x310000da,                   // 822083802
    P_FE2CL_REP_PC_BUDDY_WARP_OTHER_SHARD_SUCC = 0x310000db,   // 822083803
    P_FE2CL_REP_WARP_USE_RECALL_FAIL = 0x310000dc,             // 822083804
    P_FE2CL_REP_PC_EXIT_DUPLICATE = 0x310000dd,                // 822083805
    P_FE2CL_REP_PC_MISSION_COMPLETE_SUCC = 0x310000de,         // 822083806
    P_FE2CL_PC_BUFF_UPDATE = 0x310000df,                       // 822083807
    P_FE2CL_REP_PC_NEW_EMAIL = 0x310000e0,                     // 822083808
    P_FE2CL_REP_PC_READ_EMAIL_SUCC = 0x310000e1,               // 822083809
    P_FE2CL_REP_PC_READ_EMAIL_FAIL = 0x310000e2,               // 822083810
    P_FE2CL_REP_PC_RECV_EMAIL_PAGE_LIST_SUCC = 0x310000e3,     // 822083811
    P_FE2CL_REP_PC_RECV_EMAIL_PAGE_LIST_FAIL = 0x310000e4,     // 822083812
    P_FE2CL_REP_PC_DELETE_EMAIL_SUCC = 0x310000e5,             // 822083813
    P_FE2CL_REP_PC_DELETE_EMAIL_FAIL = 0x310000e6,             // 822083814
    P_FE2CL_REP_PC_SEND_EMAIL_SUCC = 0x310000e7,               // 822083815
    P_FE2CL_REP_PC_SEND_EMAIL_FAIL = 0x310000e8,               // 822083816
    P_FE2CL_REP_PC_RECV_EMAIL_ITEM_SUCC = 0x310000e9,          // 822083817
    P_FE2CL_REP_PC_RECV_EMAIL_ITEM_FAIL = 0x310000ea,          // 822083818
    P_FE2CL_REP_PC_RECV_EMAIL_CANDY_SUCC = 0x310000eb,         // 822083819
    P_FE2CL_REP_PC_RECV_EMAIL_CANDY_FAIL = 0x310000ec,         // 822083820
    P_FE2CL_PC_SUDDEN_DEAD = 0x310000ed,                       // 822083821
    P_FE2CL_REP_GM_REQ_TARGET_PC_SPECIAL_STATE_ONOFF_SUCC = 0x310000ee, // 822083822
    P_FE2CL_REP_PC_SET_CURRENT_MISSION_ID = 0x310000ef,        // 822083823
    P_FE2CL_REP_NPC_GROUP_INVITE_FAIL = 0x310000f0,            // 822083824
    P_FE2CL_REP_NPC_GROUP_INVITE_SUCC = 0x310000f1,            // 822083825
    P_FE2CL_REP_NPC_GROUP_KICK_FAIL = 0x310000f2,              // 822083826
    P_FE2CL_REP_NPC_GROUP_KICK_SUCC = 0x310000f3,              // 822083827
    P_FE2CL_PC_EVENT = 0x310000f4,                             // 822083828
    P_FE2CL_REP_PC_TRANSPORT_WARP_SUCC = 0x310000f5,           // 822083829
    P_FE2CL_REP_PC_TRADE_EMOTES_CHAT_FAIL = 0x310000f6,        // 822083830
    P_FE2CL_REP_PC_RECV_EMAIL_ITEM_ALL_SUCC = 0x310000f7,      // 822083831
    P_FE2CL_REP_PC_RECV_EMAIL_ITEM_ALL_FAIL = 0x310000f8,      // 822083832
    P_FE2CL_REP_PC_LOADING_COMPLETE_SUCC = 0x310000f9,         // 822083833
    P_FE2CL_REP_CHANNEL_INFO = 0x310000fa,                     // 822083834
    P_FE2CL_REP_PC_CHANNEL_NUM = 0x310000fb,                   // 822083835
    P_FE2CL_REP_PC_WARP_CHANNEL_FAIL = 0x310000fc,             // 822083836
    P_FE2CL_REP_PC_WARP_CHANNEL_SUCC = 0x310000fd,             // 822083837
    P_FE2CL_REP_PC_FIND_NAME_MAKE_BUDDY_SUCC = 0x310000fe,     // 822083838
    P_FE2CL_REP_PC_FIND_NAME_MAKE_BUDDY_FAIL = 0x310000ff,     // 822083839
    P_FE2CL_REP_PC_FIND_NAME_ACCEPT_BUDDY_FAIL = 0x31000100,   // 822083840
    P_FE2CL_REP_PC_BUDDY_WARP_SAME_SHARD_SUCC = 0x31000101,    // 822083841
    P_FE2CL_PC_ATTACK_CHARs_SUCC = 0x31000102,                 // 822083842
    P_FE2CL_PC_ATTACK_CHARs = 0x31000103,                      // 822083843
    P_FE2CL_NPC_ATTACK_CHARs = 0x31000104,                     // 822083844
    P_FE2CL_REP_PC_CHANGE_LEVEL_SUCC = 0x31000105,             // 822083845
    P_FE2CL_REP_PC_NANO_CREATE = 0x31000106,                   // 822083846
    P_FE2CL_PC_STREETSTALL_REP_READY_SUCC = 0x31000107,        // 822083847
    P_FE2CL_PC_STREETSTALL_REP_READY_FAIL = 0x31000108,        // 822083848
    P_FE2CL_PC_STREETSTALL_REP_CANCEL_SUCC = 0x31000109,       // 822083849
    P_FE2CL_PC_STREETSTALL_REP_CANCEL_FAIL = 0x3100010a,       // 822083850
    P_FE2CL_PC_STREETSTALL_REP_REGIST_ITEM_SUCC = 0x3100010b,  // 822083851
    P_FE2CL_PC_STREETSTALL_REP_REGIST_ITEM_FAIL = 0x3100010c,  // 822083852
    P_FE2CL_PC_STREETSTALL_REP_UNREGIST_ITEM_SUCC = 0x3100010d, // 822083853
    P_FE2CL_PC_STREETSTALL_REP_UNREGIST_ITEM_FAIL = 0x3100010e, // 822083854
    P_FE2CL_PC_STREETSTALL_REP_SALE_START_SUCC = 0x3100010f,   // 822083855
    P_FE2CL_PC_STREETSTALL_REP_SALE_START_FAIL = 0x31000110,   // 822083856
    P_FE2CL_PC_STREETSTALL_REP_ITEM_LIST = 0x31000111,         // 822083857
    P_FE2CL_PC_STREETSTALL_REP_ITEM_LIST_FAIL = 0x31000112,    // 822083858
    P_FE2CL_PC_STREETSTALL_REP_ITEM_BUY_SUCC_BUYER = 0x31000113, // 822083859
    P_FE2CL_PC_STREETSTALL_REP_ITEM_BUY_SUCC_SELLER = 0x31000114, // 822083860
    P_FE2CL_PC_STREETSTALL_REP_ITEM_BUY_FAIL = 0x31000115,     // 822083861
    P_FE2CL_REP_PC_ITEM_COMBINATION_SUCC = 0x31000116,         // 822083862
    P_FE2CL_REP_PC_ITEM_COMBINATION_FAIL = 0x31000117,         // 822083863
    P_FE2CL_PC_CASH_BUFF_UPDATE = 0x31000118,                  // 822083864
    P_FE2CL_REP_PC_SKILL_ADD_SUCC = 0x31000119,                // 822083865
    P_FE2CL_REP_PC_SKILL_ADD_FAIL = 0x3100011a,                // 822083866
    P_FE2CL_REP_PC_SKILL_DEL_SUCC = 0x3100011b,                // 822083867
    P_FE2CL_REP_PC_SKILL_DEL_FAIL = 0x3100011c,                // 822083868
    P_FE2CL_REP_PC_SKILL_USE_SUCC = 0x3100011d,                // 822083869
    P_FE2CL_REP_PC_SKILL_USE_FAIL = 0x3100011e,                // 822083870
    P_FE2CL_PC_SKILL_USE = 0x3100011f,                         // 822083871
    P_FE2CL_PC_ROPE = 0x31000120,                              // 822083872
    P_FE2CL_PC_BELT = 0x31000121,                              // 822083873
    P_FE2CL_PC_VEHICLE_ON_SUCC = 0x31000122,                   // 822083874
    P_FE2CL_PC_VEHICLE_ON_FAIL = 0x31000123,                   // 822083875
    P_FE2CL_PC_VEHICLE_OFF_SUCC = 0x31000124,                  // 822083876
    P_FE2CL_PC_VEHICLE_OFF_FAIL = 0x31000125,                  // 822083877
    P_FE2CL_PC_QUICK_SLOT_INFO = 0x31000126,                   // 822083878
    P_FE2CL_REP_PC_REGIST_QUICK_SLOT_FAIL = 0x31000127,        // 822083879
    P_FE2CL_REP_PC_REGIST_QUICK_SLOT_SUCC = 0x31000128,        // 822083880
    P_FE2CL_PC_DELETE_TIME_LIMIT_ITEM = 0x31000129,            // 822083881
    P_FE2CL_REP_PC_DISASSEMBLE_ITEM_SUCC = 0x3100012a,         // 822083882
    P_FE2CL_REP_PC_DISASSEMBLE_ITEM_FAIL = 0x3100012b,         // 822083883
    P_FE2CL_GM_REP_REWARD_RATE_SUCC = 0x3100012c,              // 822083884
    P_FE2CL_REP_PC_ITEM_ENCHANT_SUCC = 0x3100012d,             // 822083885
    P_FE2CL_REP_PC_ITEM_ENCHANT_FAIL = 0x3100012e,             // 822083886

    P_LS2CL_REP_LOGIN_SUCC = 0x21000001,            // 553648129
    P_LS2CL_REP_LOGIN_FAIL = 0x21000002,            // 553648130
    P_LS2CL_REP_CHAR_INFO = 0x21000003,             // 553648131
    P_LS2CL_REP_CHECK_CHAR_NAME_SUCC = 0x21000005,  // 553648133
    P_LS2CL_REP_CHECK_CHAR_NAME_FAIL = 0x21000006,  // 553648134
    P_LS2CL_REP_SAVE_CHAR_NAME_SUCC = 0x21000007,   // 553648135
    P_LS2CL_REP_SAVE_CHAR_NAME_FAIL = 0x21000008,   // 553648136
    P_LS2CL_REP_CHAR_CREATE_SUCC = 0x21000009,      // 553648137
    P_LS2CL_REP_CHAR_CREATE_FAIL = 0x2100000a,      // 553648138
    P_LS2CL_REP_CHAR_SELECT_SUCC = 0x2100000b,      // 553648139
    P_LS2CL_REP_CHAR_SELECT_FAIL = 0x2100000c,      // 553648140
    P_LS2CL_REP_CHAR_DELETE_SUCC = 0x2100000d,      // 553648141
    P_LS2CL_REP_CHAR_DELETE_FAIL = 0x2100000e,      // 553648142
    P_LS2CL_REP_SHARD_SELECT_SUCC = 0x2100000f,     // 553648143
    P_LS2CL_REP_SHARD_SELECT_FAIL = 0x21000010,     // 553648144
    P_LS2CL_REP_VERSION_CHECK_SUCC = 0x21000011,    // 553648145
    P_LS2CL_REP_VERSION_CHECK_FAIL = 0x21000012,    // 553648146
    P_LS2CL_REP_CHECK_NAME_LIST_SUCC = 0x21000013,  // 553648147
    P_LS2CL_REP_CHECK_NAME_LIST_FAIL = 0x21000014,  // 553648148
    P_LS2CL_REP_PC_EXIT_DUPLICATE = 0x21000015,     // 553648149
    P_LS2CL_REQ_LIVE_CHECK = 0x21000016,            // 553648150
    P_LS2CL_REP_CHANGE_CHAR_NAME_SUCC = 0x21000017, // 553648151
    P_LS2CL_REP_CHANGE_CHAR_NAME_FAIL = 0x21000018, // 553648152
    P_LS2CL_REP_SHARD_LIST_INFO_SUCC = 0x21000019,  // 553648153

    // custom packets
    P_LS2FE_REP_CONNECT_SUCC = 0x23000001,      // 587202561
    P_LS2FE_REP_CONNECT_FAIL = 0x23000002,      // 587202562
    P_LS2FE_REQ_LIVE_CHECK = 0x23000003,        // 587202563
    P_LS2FE_REQ_UPDATE_LOGIN_INFO = 0x23000004, // 587202564
    P_LS2FE_REP_MOTD = 0x23000005,              // 587202565
    P_LS2FE_ANNOUNCE_MSG = 0x23000006,          // 587202566
    P_LS2FE_REP_PC_LOCATION_SUCC = 0x23000007,  // 587202567
    P_LS2FE_REP_PC_LOCATION_FAIL = 0x23000008,  // 587202568
    P_LS2FE_REQ_PC_LOCATION = 0x23000009,       // 587202569
    P_LS2FE_REQ_PC_EXIT_DUPLICATE = 0x2300000a, // 587202570
    P_LS2FE_REP_LIVE_CHECK = 0x2300000b,        // 587202571
    P_LS2FE_REP_AUTH_CHALLENGE = 0x2300000c,    // 587202572

    P_FE2LS_REQ_CONNECT = 0x32000001,                // 838860801
    P_FE2LS_REP_LIVE_CHECK = 0x32000002,             // 838860802
    P_FE2LS_REP_UPDATE_LOGIN_INFO_SUCC = 0x32000003, // 838860803
    P_FE2LS_REP_UPDATE_LOGIN_INFO_FAIL = 0x32000004, // 838860804
    P_FE2LS_UPDATE_PC_SHARD = 0x32000005,            // 838860805
    P_FE2LS_UPDATE_CHANNEL_STATUSES = 0x32000006,    // 838860806
    P_FE2LS_REQ_MOTD = 0x32000007,                   // 838860807
    P_FE2LS_MOTD_REGISTER = 0x32000008,              // 838860808
    P_FE2LS_ANNOUNCE_MSG = 0x32000009,               // 838860809
    P_FE2LS_REQ_PC_LOCATION = 0x3200000a,            // 838860810
    P_FE2LS_REP_PC_LOCATION_SUCC = 0x3200000b,       // 838860811
    P_FE2LS_REP_PC_LOCATION_FAIL = 0x3200000c,       // 838860812
    P_FE2LS_REQ_LIVE_CHECK = 0x3200000d,             // 838860813
    P_FE2LS_REQ_AUTH_CHALLENGE = 0x3200000e,         // 838860814
}

pub trait FFPacket: std::fmt::Debug {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPCStyle {
    pub iPC_UID: i64,
    pub iNameCheck: i8,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
    pub iGender: i8,
    pub iFaceStyle: i8,
    pub iHairStyle: i8,
    pub iHairColor: i8,
    pub iSkinColor: i8,
    pub iEyeColor: i8,
    pub iHeight: i8,
    pub iBody: i8,
    pub iClass: i32,
}
impl FFPacket for sPCStyle {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPCStyle2 {
    pub iAppearanceFlag: i8,
    pub iTutorialFlag: i8,
    pub iPayzoneFlag: i8,
}
impl FFPacket for sPCStyle2 {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sRunningQuest {
    pub m_aCurrTaskID: i32,
    pub m_aKillNPCID: [i32; 3],
    pub m_aKillNPCCount: [i32; 3],
    pub m_aNeededItemID: [i32; 3],
    pub m_aNeededItemCount: [i32; 3],
}
impl FFPacket for sRunningQuest {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sOnItem {
    pub iEquipHandID: i16,
    pub iEquipUBID: i16,
    pub iEquipLBID: i16,
    pub iEquipFootID: i16,
    pub iEquipHeadID: i16,
    pub iEquipFaceID: i16,
    pub iEquipBackID: i16,
}
impl FFPacket for sOnItem {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sOnItem_Index {
    pub iEquipUBID_index: i16,
    pub iEquipLBID_index: i16,
    pub iEquipFootID_index: i16,
    pub iFaceStyle: i16,
    pub iHairStyle: i16,
}
impl FFPacket for sOnItem_Index {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sItemBase {
    pub iType: i16,
    pub iID: i16,
    pub iOpt: i32,
    pub iTimeLimit: i32,
}
impl FFPacket for sItemBase {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sItemTrade {
    pub iType: i16,
    pub iID: i16,
    pub iOpt: i32,
    pub iInvenNum: i32,
    pub iSlotNum: i32,
}
impl FFPacket for sItemTrade {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sItemVendor {
    pub iVendorID: i32,
    pub fBuyCost: f32,
    pub item: sItemBase,
    pub iSortNum: i32,
}
impl FFPacket for sItemVendor {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sItemReward {
    pub sItem: sItemBase,
    pub eIL: i32,
    pub iSlotNum: i32,
}
impl FFPacket for sItemReward {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sTimeLimitItemDeleteInfo2CL {
    pub eIL: i32,
    pub iSlotNum: i32,
}
impl FFPacket for sTimeLimitItemDeleteInfo2CL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sNanoTuneNeedItemInfo2CL {
    pub iSlotNum: i32,
    pub ItemBase: sItemBase,
}
impl FFPacket for sNanoTuneNeedItemInfo2CL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sEmailItemInfoFromCL {
    pub iSlotNum: i32,
    pub ItemInven: sItemBase,
}
impl FFPacket for sEmailItemInfoFromCL {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sEPRecord {
    pub uiScore: i16,
    pub uiRank: i8,
    pub uiRing: i8,
    pub uiTime: i16,
}
impl FFPacket for sEPRecord {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sBuddyBaseInfo {
    pub iID: i32,
    pub iPCUID: i64,
    pub bBlocked: i8,
    pub bFreeChat: i8,
    pub iPCState: i8,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
    pub iGender: i8,
    pub iNameCheckFlag: i8,
}
impl FFPacket for sBuddyBaseInfo {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sBuddyStyleInfo {
    pub sBuddyStyle: sPCStyle,
    pub aEquip: [sItemBase; 9],
}
impl FFPacket for sBuddyStyleInfo {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSYSTEMTIME {
    pub wYear: i32,
    pub wMonth: i32,
    pub wDayOfWeek: i32,
    pub wDay: i32,
    pub wHour: i32,
    pub wMinute: i32,
    pub wSecond: i32,
    pub wMilliseconds: i32,
}
impl FFPacket for sSYSTEMTIME {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sEmailInfo {
    pub iEmailIndex: i64,
    pub iFromPCUID: i64,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
    pub szSubject: [u16; 32],
    pub iReadFlag: i32,
    pub SendTime: sSYSTEMTIME,
    pub DeleteTime: sSYSTEMTIME,
    pub iItemCandyFlag: i32,
}
impl FFPacket for sEmailInfo {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sNano {
    pub iID: i16,
    pub iSkillID: i16,
    pub iStamina: i16,
}
impl FFPacket for sNano {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sNanoBank {
    pub iSkillID: i16,
    pub iStamina: i16,
}
impl FFPacket for sNanoBank {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sTimeBuff {
    pub iTimeLimit: u64,
    pub iTimeDuration: u64,
    pub iTimeRepeat: i32,
    pub iValue: i32,
    pub iConfirmNum: i32,
}
impl FFPacket for sTimeBuff {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sTimeBuff_Svr {
    pub iTimeLimit: u64,
    pub iTimeDuration: u64,
    pub iTimeRepeat: i32,
    pub iValue: i32,
    pub iConfirmNum: i32,
    pub iTimeFlow: i16,
}
impl FFPacket for sTimeBuff_Svr {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPCLoadData2CL {
    pub iUserLevel: i16,
    pub PCStyle: sPCStyle,
    pub PCStyle2: sPCStyle2,
    pub iLevel: i16,
    pub iMentor: i16,
    pub iMentorCount: i16,
    pub iHP: i32,
    pub iBatteryW: i32,
    pub iBatteryN: i32,
    pub iCandy: i32,
    pub iFusionMatter: i32,
    pub iSpecialState: i8,
    pub iMapNum: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iAngle: i32,
    pub aEquip: [sItemBase; 9],
    pub aInven: [sItemBase; 50],
    pub aQInven: [sItemBase; 50],
    pub aNanoBank: [sNano; 37],
    pub aNanoSlots: [u16; 3],
    pub iActiveNanoSlotNum: i16,
    pub iConditionBitFlag: i32,
    pub eCSTB___Add: i32,
    pub TimeBuff: sTimeBuff,
    pub aQuestFlag: [i64; 32],
    pub aRepeatQuestFlag: [i64; 8],
    pub aRunningQuest: [sRunningQuest; 9],
    pub iCurrentMissionID: i32,
    pub iWarpLocationFlag: i32,
    pub aWyvernLocationFlag: [i64; 2],
    pub iBuddyWarpTime: i32,
    pub iFatigue: i32,
    pub iFatigue_Level: i32,
    pub iFatigueRate: i32,
    pub iFirstUseFlag1: i64,
    pub iFirstUseFlag2: i64,
    pub aiPCSkill: [i32; 33],
}
impl FFPacket for sPCLoadData2CL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPCAppearanceData {
    pub iID: i32,
    pub PCStyle: sPCStyle,
    pub iConditionBitFlag: i32,
    pub iPCState: i8,
    pub iSpecialState: i8,
    pub iLv: i16,
    pub iHP: i32,
    pub iMapNum: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iAngle: i32,
    pub ItemEquip: [sItemBase; 9],
    pub Nano: sNano,
    pub eRT: i32,
}
impl FFPacket for sPCAppearanceData {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sNPCAppearanceData {
    pub iNPC_ID: i32,
    pub iNPCType: i32,
    pub iHP: i32,
    pub iConditionBitFlag: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iAngle: i32,
    pub iBarkerType: i32,
}
impl FFPacket for sNPCAppearanceData {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sBulletAppearanceData {
    pub iBullet_ID: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iAngle: i32,
}
impl FFPacket for sBulletAppearanceData {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sTransportationLoadData {
    pub iAISvrID: i32,
    pub eTT: i32,
    pub iT_Type: i32,
    pub iMapType: i32,
    pub iMapNum: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
}
impl FFPacket for sTransportationLoadData {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sTransportationAppearanceData {
    pub eTT: i32,
    pub iT_ID: i32,
    pub iT_Type: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
}
impl FFPacket for sTransportationAppearanceData {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sShinyAppearanceData {
    pub iShiny_ID: i32,
    pub iShinyType: i32,
    pub iMapNum: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
}
impl FFPacket for sShinyAppearanceData {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sAttackResult {
    pub eCT: i32,
    pub iID: i32,
    pub bProtected: i32,
    pub iDamage: i32,
    pub iHP: i32,
    pub iHitFlag: i8,
}
impl FFPacket for sAttackResult {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sCAttackResult {
    pub eCT: i32,
    pub iID: i32,
    pub bProtected: i32,
    pub iDamage: i32,
    pub iHP: i32,
    pub iHitFlag: i8,
    pub iActiveNanoSlotNum: i16,
    pub bNanoDeactive: i32,
    pub iNanoID: i16,
    pub iNanoStamina: i16,
    pub iConditionBitFlag: i32,
    pub eCSTB___Del: i32,
}
impl FFPacket for sCAttackResult {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSkillResult_Damage {
    pub eCT: i32,
    pub iID: i32,
    pub bProtected: i32,
    pub iDamage: i32,
    pub iHP: i32,
}
impl FFPacket for sSkillResult_Damage {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSkillResult_DotDamage {
    pub eCT: i32,
    pub iID: i32,
    pub bProtected: i32,
    pub iDamage: i32,
    pub iHP: i32,
    pub iStamina: i16,
    pub bNanoDeactive: i32,
    pub iConditionBitFlag: i32,
}
impl FFPacket for sSkillResult_DotDamage {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSkillResult_Heal_HP {
    pub eCT: i32,
    pub iID: i32,
    pub iHealHP: i32,
    pub iHP: i32,
}
impl FFPacket for sSkillResult_Heal_HP {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSkillResult_Heal_Stamina {
    pub eCT: i32,
    pub iID: i32,
    pub iHealNanoStamina: i16,
    pub Nano: sNano,
}
impl FFPacket for sSkillResult_Heal_Stamina {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSkillResult_Stamina_Self {
    pub eCT: i32,
    pub iID: i32,
    pub iReduceHP: i32,
    pub iHP: i32,
    pub iHealNanoStamina: i16,
    pub Nano: sNano,
}
impl FFPacket for sSkillResult_Stamina_Self {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSkillResult_Damage_N_Debuff {
    pub eCT: i32,
    pub iID: i32,
    pub bProtected: i32,
    pub iDamage: i32,
    pub iHP: i32,
    pub iStamina: i16,
    pub bNanoDeactive: i32,
    pub iConditionBitFlag: i32,
}
impl FFPacket for sSkillResult_Damage_N_Debuff {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSkillResult_Buff {
    pub eCT: i32,
    pub iID: i32,
    pub bProtected: i32,
    pub iConditionBitFlag: i32,
}
impl FFPacket for sSkillResult_Buff {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSkillResult_BatteryDrain {
    pub eCT: i32,
    pub iID: i32,
    pub bProtected: i32,
    pub iDrainW: i32,
    pub iBatteryW: i32,
    pub iDrainN: i32,
    pub iBatteryN: i32,
    pub iStamina: i16,
    pub bNanoDeactive: i32,
    pub iConditionBitFlag: i32,
}
impl FFPacket for sSkillResult_BatteryDrain {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSkillResult_Damage_N_Move {
    pub eCT: i32,
    pub iID: i32,
    pub bProtected: i32,
    pub iDamage: i32,
    pub iHP: i32,
    pub iMoveX: i32,
    pub iMoveY: i32,
    pub iMoveZ: i32,
    pub iBlockMove: i32,
}
impl FFPacket for sSkillResult_Damage_N_Move {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSkillResult_Move {
    pub eCT: i32,
    pub iID: i32,
    pub iMapNum: i32,
    pub iMoveX: i32,
    pub iMoveY: i32,
    pub iMoveZ: i32,
}
impl FFPacket for sSkillResult_Move {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sSkillResult_Resurrect {
    pub eCT: i32,
    pub iID: i32,
    pub iRegenHP: i32,
}
impl FFPacket for sSkillResult_Resurrect {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPC_HP {
    pub iPC_ID: i32,
    pub iHP: i32,
}
impl FFPacket for sPC_HP {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPC_BATTERYs {
    pub iPC_ID: i32,
    pub iBatteryW: i32,
    pub iBatteryN: i32,
}
impl FFPacket for sPC_BATTERYs {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPC_NanoSlots {
    pub aNanoSlots: [i32; 3],
    pub iActiveNanoSlotNum: i16,
}
impl FFPacket for sPC_NanoSlots {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPC_Nano {
    pub iPC_ID: i32,
    pub Nano: sNano,
    pub iActiveNanoSlotNum: i16,
}
impl FFPacket for sPC_Nano {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPCRegenData {
    pub iHP: i32,
    pub iMapNum: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iActiveNanoSlotNum: i16,
    pub Nanos: [sNano; 3],
}
impl FFPacket for sPCRegenData {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPCRegenDataForOtherPC {
    pub iPC_ID: i32,
    pub iHP: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iAngle: i32,
    pub iConditionBitFlag: i32,
    pub iPCState: i8,
    pub iSpecialState: i8,
    pub Nano: sNano,
}
impl FFPacket for sPCRegenDataForOtherPC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPCBullet {
    pub eAT: i32,
    pub iID: i32,
    pub bCharged: i32,
}
impl FFPacket for sPCBullet {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sNPCBullet {
    pub eAT: i32,
    pub iID: i32,
    pub bCharged: i32,
    pub eST: i32,
}
impl FFPacket for sNPCBullet {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sNPCLocationData {
    pub iNPC_Type: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iAngle: i32,
    pub iRoute: i32,
}
impl FFPacket for sNPCLocationData {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sGroupNPCLocationData {
    pub iGroupType: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iAngle: i32,
    pub iRoute: i32,
    pub aGroupNPCIDs: [i32; 5],
}
impl FFPacket for sGroupNPCLocationData {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPCGroupMemberInfo {
    pub iPC_ID: i32,
    pub iPCUID: u64,
    pub iNameCheck: i8,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
    pub iSpecialState: i8,
    pub iLv: i16,
    pub iHP: i32,
    pub iMaxHP: i32,
    pub iMapType: i32,
    pub iMapNum: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub bNano: i32,
    pub Nano: sNano,
}
impl FFPacket for sPCGroupMemberInfo {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sNPCGroupMemberInfo {
    pub iNPC_ID: i32,
    pub iNPC_Type: i32,
    pub iHP: i32,
    pub iMapType: i32,
    pub iMapNum: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
}
impl FFPacket for sNPCGroupMemberInfo {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sEPElement {
    pub iLID: i32,
    pub iGID: i32,
    pub iType: i32,
    pub iTargetGID: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iEnable: i32,
    pub iONOFF: i32,
}
impl FFPacket for sEPElement {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sCNStreetStall_ItemInfo_for_Client {
    pub iListNum: i32,
    pub Item: sItemBase,
    pub iPrice: i32,
}
impl FFPacket for sCNStreetStall_ItemInfo_for_Client {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sQuickSlot {
    pub iType: i16,
    pub iID: i16,
}
impl FFPacket for sQuickSlot {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_ENTER {
    pub szID: [u16; 33],
    pub iTempValue: i32,
    pub iEnterSerialKey: i64,
}
impl FFPacket for sP_CL2FE_REQ_PC_ENTER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_EXIT {
    pub iID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_EXIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_MOVE {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_MOVE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_STOP {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_STOP {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_JUMP {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iVX: i32,
    pub iVY: i32,
    pub iVZ: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_JUMP {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_ATTACK_NPCs {
    pub iNPCCnt: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_ATTACK_NPCs {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SEND_FREECHAT_MESSAGE {
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_CL2FE_REQ_SEND_FREECHAT_MESSAGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SEND_MENUCHAT_MESSAGE {
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_CL2FE_REQ_SEND_MENUCHAT_MESSAGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_REGEN {
    pub iRegenType: i32,
    pub eIL: i32,
    pub iIndex: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_REGEN {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_ITEM_MOVE {
    pub eFrom: i32,
    pub iFromSlotNum: i32,
    pub eTo: i32,
    pub iToSlotNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_ITEM_MOVE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TASK_START {
    pub iTaskNum: i32,
    pub iNPC_ID: i32,
    pub iEscortNPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TASK_START {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TASK_END {
    pub iTaskNum: i32,
    pub iNPC_ID: i32,
    pub iBox1Choice: i8,
    pub iBox2Choice: i8,
    pub iEscortNPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TASK_END {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_NANO_EQUIP {
    pub iNanoID: i16,
    pub iNanoSlotNum: i16,
}
impl FFPacket for sP_CL2FE_REQ_NANO_EQUIP {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_NANO_UNEQUIP {
    pub iNanoSlotNum: i16,
}
impl FFPacket for sP_CL2FE_REQ_NANO_UNEQUIP {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_NANO_ACTIVE {
    pub iNanoSlotNum: i16,
}
impl FFPacket for sP_CL2FE_REQ_NANO_ACTIVE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_NANO_TUNE {
    pub iNanoID: i16,
    pub iTuneID: i16,
    pub aiNeedItemSlotNum: [i32; 10],
}
impl FFPacket for sP_CL2FE_REQ_NANO_TUNE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_NANO_SKILL_USE {
    pub iBulletID: i8,
    pub iArg1: i32,
    pub iArg2: i32,
    pub iArg3: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_CL2FE_REQ_NANO_SKILL_USE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TASK_STOP {
    pub iTaskNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TASK_STOP {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TASK_CONTINUE {
    pub iTaskNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TASK_CONTINUE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_GOTO {
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_GOTO {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_CHARGE_NANO_STAMINA {
    pub iPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_CHARGE_NANO_STAMINA {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_KILL_QUEST_NPCs {
    pub iNPCCnt: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_KILL_QUEST_NPCs {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_VENDOR_ITEM_BUY {
    pub iNPC_ID: i32,
    pub iVendorID: i32,
    pub iListID: i8,
    pub Item: sItemBase,
    pub iInvenSlotNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_VENDOR_ITEM_BUY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_VENDOR_ITEM_SELL {
    pub iInvenSlotNum: i32,
    pub iItemCnt: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_VENDOR_ITEM_SELL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_ITEM_DELETE {
    pub eIL: i32,
    pub iSlotNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_ITEM_DELETE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_GIVE_ITEM {
    pub eIL: i32,
    pub iSlotNum: i32,
    pub Item: sItemBase,
    pub iTimeLeft: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_GIVE_ITEM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_ROCKET_STYLE_READY {
    pub iSkillID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_ROCKET_STYLE_READY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_ROCKET_STYLE_FIRE {
    pub iSkillID: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_ROCKET_STYLE_FIRE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_ROCKET_STYLE_HIT {
    pub iBulletID: i8,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_ROCKET_STYLE_HIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_GRENADE_STYLE_READY {
    pub iSkillID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_GRENADE_STYLE_READY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_GRENADE_STYLE_FIRE {
    pub iSkillID: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_GRENADE_STYLE_FIRE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_GRENADE_STYLE_HIT {
    pub iBulletID: i8,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_GRENADE_STYLE_HIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_NANO_CREATE {
    pub iNanoID: i16,
    pub iNeedQuestItemSlotNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_NANO_CREATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_OFFER {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_OFFER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_OFFER_CANCEL {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_OFFER_CANCEL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_OFFER_ACCEPT {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_OFFER_ACCEPT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_OFFER_REFUSAL {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_OFFER_REFUSAL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_OFFER_ABORT {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub iErrorCode: i16,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_OFFER_ABORT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_CONFIRM {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_CONFIRM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_CONFIRM_CANCEL {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_CONFIRM_CANCEL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_CONFIRM_ABORT {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_CONFIRM_ABORT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_ITEM_REGISTER {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub Item: sItemTrade,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_ITEM_REGISTER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_ITEM_UNREGISTER {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub Item: sItemTrade,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_ITEM_UNREGISTER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_CASH_REGISTER {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub iCandy: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_CASH_REGISTER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRADE_EMOTES_CHAT {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
    pub iFreeChatUse: i8,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRADE_EMOTES_CHAT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_BANK_OPEN {
    pub iPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_BANK_OPEN {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_BANK_CLOSE {
    pub iPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_BANK_CLOSE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_VENDOR_START {
    pub iNPC_ID: i32,
    pub iVendorID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_VENDOR_START {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_VENDOR_TABLE_UPDATE {
    pub iNPC_ID: i32,
    pub iVendorID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_VENDOR_TABLE_UPDATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_VENDOR_ITEM_RESTORE_BUY {
    pub iNPC_ID: i32,
    pub iVendorID: i32,
    pub iListID: i8,
    pub Item: sItemBase,
    pub iInvenSlotNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_VENDOR_ITEM_RESTORE_BUY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_COMBAT_BEGIN {
    pub iPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_COMBAT_BEGIN {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_COMBAT_END {
    pub iPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_COMBAT_END {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_REQUEST_MAKE_BUDDY {
    pub iBuddyID: i32,
    pub iBuddyPCUID: i64,
}
impl FFPacket for sP_CL2FE_REQ_REQUEST_MAKE_BUDDY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_ACCEPT_MAKE_BUDDY {
    pub iAcceptFlag: i8,
    pub iBuddyID: i32,
    pub iBuddyPCUID: i64,
}
impl FFPacket for sP_CL2FE_REQ_ACCEPT_MAKE_BUDDY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SEND_BUDDY_FREECHAT_MESSAGE {
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
    pub iBuddyPCUID: i64,
    pub iBuddySlot: i8,
}
impl FFPacket for sP_CL2FE_REQ_SEND_BUDDY_FREECHAT_MESSAGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SEND_BUDDY_MENUCHAT_MESSAGE {
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
    pub iBuddyPCUID: i64,
    pub iBuddySlot: i8,
}
impl FFPacket for sP_CL2FE_REQ_SEND_BUDDY_MENUCHAT_MESSAGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_GET_BUDDY_STYLE {
    pub iBuddyPCUID: i64,
    pub iBuddySlot: i8,
}
impl FFPacket for sP_CL2FE_REQ_GET_BUDDY_STYLE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SET_BUDDY_BLOCK {
    pub iBuddyPCUID: i64,
    pub iBuddySlot: i8,
}
impl FFPacket for sP_CL2FE_REQ_SET_BUDDY_BLOCK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_REMOVE_BUDDY {
    pub iBuddyPCUID: i64,
    pub iBuddySlot: i8,
}
impl FFPacket for sP_CL2FE_REQ_REMOVE_BUDDY {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_GET_BUDDY_STATE {
    pub UNUSED: u8,
}
impl FFPacket for sP_CL2FE_REQ_GET_BUDDY_STATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_JUMPPAD {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iVX: i32,
    pub iVY: i32,
    pub iVZ: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
}
impl FFPacket for sP_CL2FE_REQ_PC_JUMPPAD {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_LAUNCHER {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iVX: i32,
    pub iVY: i32,
    pub iVZ: i32,
    pub iAngle: i32,
    pub iSpeed: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_LAUNCHER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_ZIPLINE {
    pub iCliTime: u64,
    pub iStX: i32,
    pub iStY: i32,
    pub iStZ: i32,
    pub fMovDistance: f32,
    pub fMaxDistance: f32,
    pub fDummy: f32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub bDown: i32,
    pub iRollMax: i32,
    pub iRoll: u8,
    pub iAngle: i32,
    pub iSpeed: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_ZIPLINE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_MOVEPLATFORM {
    pub iCliTime: u64,
    pub iLcX: i32,
    pub iLcY: i32,
    pub iLcZ: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub bDown: i32,
    pub iPlatformID: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_MOVEPLATFORM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_SLOPE {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iAngle: i32,
    pub iSpeed: i32,
    pub cKeyValue: u8,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub iSlopeID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_SLOPE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_STATE_CHANGE {
    pub iState: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_STATE_CHANGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_MAP_WARP {
    pub iMapNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_MAP_WARP {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_GIVE_NANO {
    pub iNanoID: i16,
}
impl FFPacket for sP_CL2FE_REQ_PC_GIVE_NANO {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_NPC_SUMMON {
    pub iNPCType: i32,
    pub iNPCCnt: i16,
}
impl FFPacket for sP_CL2FE_REQ_NPC_SUMMON {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_NPC_UNSUMMON {
    pub iNPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_NPC_UNSUMMON {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_ITEM_CHEST_OPEN {
    pub eIL: i32,
    pub iSlotNum: i32,
    pub ChestItem: sItemBase,
}
impl FFPacket for sP_CL2FE_REQ_ITEM_CHEST_OPEN {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_GIVE_NANO_SKILL {
    pub iNanoID: i16,
    pub iNanoSkillID: i16,
}
impl FFPacket for sP_CL2FE_REQ_PC_GIVE_NANO_SKILL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_DOT_DAMAGE_ONOFF {
    pub iFlag: i32,
}
impl FFPacket for sP_CL2FE_DOT_DAMAGE_ONOFF {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_VENDOR_BATTERY_BUY {
    pub iNPC_ID: i32,
    pub iVendorID: i32,
    pub iListID: i8,
    pub Item: sItemBase,
}
impl FFPacket for sP_CL2FE_REQ_PC_VENDOR_BATTERY_BUY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_WARP_USE_NPC {
    pub iNPC_ID: i32,
    pub iWarpID: i32,
    pub eIL1: i32,
    pub iItemSlot1: i32,
    pub eIL2: i32,
    pub iItemSlot2: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_WARP_USE_NPC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_GROUP_INVITE {
    pub iID_To: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_GROUP_INVITE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_GROUP_INVITE_REFUSE {
    pub iID_From: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_GROUP_INVITE_REFUSE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_GROUP_JOIN {
    pub iID_From: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_GROUP_JOIN {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_GROUP_LEAVE {
    pub UNUSED: u8,
}
impl FFPacket for sP_CL2FE_REQ_PC_GROUP_LEAVE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_AVATAR_EMOTES_CHAT {
    pub iID_From: i32,
    pub iEmoteCode: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_AVATAR_EMOTES_CHAT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_BUDDY_WARP {
    pub iBuddyPCUID: i64,
    pub iSlotNum: i8,
}
impl FFPacket for sP_CL2FE_REQ_PC_BUDDY_WARP {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_GET_MEMBER_STYLE {
    pub iMemberID: i32,
    pub iMemberUID: i64,
}
impl FFPacket for sP_CL2FE_REQ_GET_MEMBER_STYLE {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_GET_GROUP_STYLE {
    pub UNUSED: u8,
}
impl FFPacket for sP_CL2FE_REQ_GET_GROUP_STYLE {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_CHANGE_MENTOR {
    pub iMentor: i16,
}
impl FFPacket for sP_CL2FE_REQ_PC_CHANGE_MENTOR {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_GET_BUDDY_LOCATION {
    pub iBuddyPCUID: i64,
    pub iSlotNum: i8,
}
impl FFPacket for sP_CL2FE_REQ_GET_BUDDY_LOCATION {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_NPC_GROUP_SUMMON {
    pub iNPCGroupType: i32,
}
impl FFPacket for sP_CL2FE_REQ_NPC_GROUP_SUMMON {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_WARP_TO_PC {
    pub iPC_ID: i32,
    pub iPCUID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_WARP_TO_PC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_EP_RANK_GET_LIST {
    pub iRankListPageNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_EP_RANK_GET_LIST {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_EP_RANK_GET_DETAIL {
    pub iEP_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_EP_RANK_GET_DETAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_EP_RANK_GET_PC_INFO {
    pub iEP_ID: i32,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
}
impl FFPacket for sP_CL2FE_REQ_EP_RANK_GET_PC_INFO {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_EP_RACE_START {
    pub iStartEcomID: i32,
    pub iEPRaceMode: i32,
    pub iEPTicketItemSlotNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_EP_RACE_START {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_EP_RACE_END {
    pub iEndEcomID: i32,
    pub iEPTicketItemSlotNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_EP_RACE_END {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_EP_RACE_CANCEL {
    pub iStartEcomID: i32,
}
impl FFPacket for sP_CL2FE_REQ_EP_RACE_CANCEL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_EP_GET_RING {
    pub iRingLID: i32,
}
impl FFPacket for sP_CL2FE_REQ_EP_GET_RING {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_IM_CHANGE_SWITCH_STATUS {
    pub iSwitchLID: i32,
}
impl FFPacket for sP_CL2FE_REQ_IM_CHANGE_SWITCH_STATUS {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SHINY_PICKUP {
    pub iShinyID: i32,
}
impl FFPacket for sP_CL2FE_REQ_SHINY_PICKUP {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SHINY_SUMMON {
    pub iShinyType: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
}
impl FFPacket for sP_CL2FE_REQ_SHINY_SUMMON {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_MOVETRANSPORTATION {
    pub iCliTime: u64,
    pub iLcX: i32,
    pub iLcY: i32,
    pub iLcZ: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub iT_ID: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_MOVETRANSPORTATION {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SEND_ALL_GROUP_FREECHAT_MESSAGE {
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_CL2FE_REQ_SEND_ALL_GROUP_FREECHAT_MESSAGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SEND_ANY_GROUP_FREECHAT_MESSAGE {
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
    pub iGroupPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_SEND_ANY_GROUP_FREECHAT_MESSAGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_BARKER {
    pub iMissionTaskID: i32,
    pub iNPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_BARKER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SEND_ALL_GROUP_MENUCHAT_MESSAGE {
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_CL2FE_REQ_SEND_ALL_GROUP_MENUCHAT_MESSAGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SEND_ANY_GROUP_MENUCHAT_MESSAGE {
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
    pub iGroupPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_SEND_ANY_GROUP_MENUCHAT_MESSAGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_REGIST_TRANSPORTATION_LOCATION {
    pub eTT: i32,
    pub iNPC_ID: i32,
    pub iLocationID: i32,
}
impl FFPacket for sP_CL2FE_REQ_REGIST_TRANSPORTATION_LOCATION {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_WARP_USE_TRANSPORTATION {
    pub iNPC_ID: i32,
    pub iTransporationID: i32,
    pub eIL: i32,
    pub iSlotNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_WARP_USE_TRANSPORTATION {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_GM_REQ_PC_SPECIAL_STATE_SWITCH {
    pub iPC_ID: i32,
    pub iSpecialStateFlag: i8,
}
impl FFPacket for sP_CL2FE_GM_REQ_PC_SPECIAL_STATE_SWITCH {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_GM_REQ_PC_SET_VALUE {
    pub iPC_ID: i32,
    pub iSetValueType: i32,
    pub iSetValue: i32,
}
impl FFPacket for sP_CL2FE_GM_REQ_PC_SET_VALUE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_GM_REQ_KICK_PLAYER {
    pub iPC_ID: i32,
    pub eTargetSearchBy: i32,
    pub iTargetPC_ID: i32,
    pub szTargetPC_FirstName: [u16; 10],
    pub szTargetPC_LastName: [u16; 18],
    pub iTargetPC_UID: i64,
}
impl FFPacket for sP_CL2FE_GM_REQ_KICK_PLAYER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_GM_REQ_TARGET_PC_TELEPORT {
    pub iPC_ID: i32,
    pub eTargetPCSearchBy: i32,
    pub iTargetPC_ID: i32,
    pub szTargetPC_FirstName: [u16; 10],
    pub szTargetPC_LastName: [u16; 18],
    pub iTargetPC_UID: i64,
    pub eTeleportType: i32,
    pub iToMapType: i32,
    pub iToMap: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
    pub eGoalPCSearchBy: i32,
    pub iGoalPC_ID: i32,
    pub szGoalPC_FirstName: [u16; 10],
    pub szGoalPC_LastName: [u16; 18],
    pub iGoalPC_UID: i64,
}
impl FFPacket for sP_CL2FE_GM_REQ_TARGET_PC_TELEPORT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_GM_REQ_PC_LOCATION {
    pub eTargetSearchBy: i32,
    pub iTargetPC_ID: i32,
    pub szTargetPC_FirstName: [u16; 10],
    pub szTargetPC_LastName: [u16; 18],
    pub iTargetPC_UID: i64,
}
impl FFPacket for sP_CL2FE_GM_REQ_PC_LOCATION {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_GM_REQ_PC_ANNOUNCE {
    pub iAreaType: i8,
    pub iAnnounceType: i8,
    pub iDuringTime: i32,
    pub szAnnounceMsg: [u16; 512],
}
impl FFPacket for sP_CL2FE_GM_REQ_PC_ANNOUNCE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_SET_PC_BLOCK {
    pub iBlock_ID: i32,
    pub iBlock_PCUID: i64,
}
impl FFPacket for sP_CL2FE_REQ_SET_PC_BLOCK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_REGIST_RXCOM {
    pub iNPCID: i32,
}
impl FFPacket for sP_CL2FE_REQ_REGIST_RXCOM {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_GM_REQ_PC_MOTD_REGISTER {
    pub iType: i8,
    pub szSystemMsg: [u16; 512],
}
impl FFPacket for sP_CL2FE_GM_REQ_PC_MOTD_REGISTER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_ITEM_USE {
    pub eIL: i32,
    pub iSlotNum: i32,
    pub iNanoSlot: i16,
}
impl FFPacket for sP_CL2FE_REQ_ITEM_USE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_WARP_USE_RECALL {
    pub iGroupMemberID: i32,
}
impl FFPacket for sP_CL2FE_REQ_WARP_USE_RECALL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REP_LIVE_CHECK {
    pub iTempValue: i32,
}
impl FFPacket for sP_CL2FE_REP_LIVE_CHECK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_MISSION_COMPLETE {
    pub iMissionNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_MISSION_COMPLETE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TASK_COMPLETE {
    pub iTaskNum: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TASK_COMPLETE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_NPC_INTERACTION {
    pub iNPC_ID: i32,
    pub bFlag: i32,
}
impl FFPacket for sP_CL2FE_REQ_NPC_INTERACTION {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_DOT_HEAL_ONOFF {
    pub iFlag: i32,
}
impl FFPacket for sP_CL2FE_DOT_HEAL_ONOFF {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_SPECIAL_STATE_SWITCH {
    pub iPC_ID: i32,
    pub iSpecialStateFlag: i8,
}
impl FFPacket for sP_CL2FE_REQ_PC_SPECIAL_STATE_SWITCH {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_EMAIL_UPDATE_CHECK {
    pub UNUSED: u8,
}
impl FFPacket for sP_CL2FE_REQ_PC_EMAIL_UPDATE_CHECK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_READ_EMAIL {
    pub iEmailIndex: i64,
}
impl FFPacket for sP_CL2FE_REQ_PC_READ_EMAIL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_RECV_EMAIL_PAGE_LIST {
    pub iPageNum: i8,
}
impl FFPacket for sP_CL2FE_REQ_PC_RECV_EMAIL_PAGE_LIST {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_DELETE_EMAIL {
    pub iEmailIndexArray: [i64; 5],
}
impl FFPacket for sP_CL2FE_REQ_PC_DELETE_EMAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_SEND_EMAIL {
    pub iTo_PCUID: i64,
    pub szSubject: [u16; 32],
    pub szContent: [u16; 512],
    pub aItem: [sEmailItemInfoFromCL; 4],
    pub iCash: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_SEND_EMAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_RECV_EMAIL_ITEM {
    pub iEmailIndex: i64,
    pub iSlotNum: i32,
    pub iEmailItemSlot: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_RECV_EMAIL_ITEM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_RECV_EMAIL_CANDY {
    pub iEmailIndex: i64,
}
impl FFPacket for sP_CL2FE_REQ_PC_RECV_EMAIL_CANDY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_GM_REQ_TARGET_PC_SPECIAL_STATE_ONOFF {
    pub eTargetSearchBy: i32,
    pub iTargetPC_ID: i32,
    pub szTargetPC_FirstName: [u16; 10],
    pub szTargetPC_LastName: [u16; 18],
    pub iTargetPC_UID: i64,
    pub iONOFF: i32,
    pub iSpecialStateFlag: i8,
}
impl FFPacket for sP_CL2FE_GM_REQ_TARGET_PC_SPECIAL_STATE_ONOFF {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_SET_CURRENT_MISSION_ID {
    pub iCurrentMissionID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_SET_CURRENT_MISSION_ID {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_NPC_GROUP_INVITE {
    pub iNPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_NPC_GROUP_INVITE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_NPC_GROUP_KICK {
    pub iNPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_NPC_GROUP_KICK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_FIRST_USE_FLAG_SET {
    pub iFlagCode: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_FIRST_USE_FLAG_SET {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TRANSPORT_WARP {
    pub iTransport_ID: i32,
    pub iLcX: i32,
    pub iLcY: i32,
    pub iLcZ: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TRANSPORT_WARP {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_TIME_TO_GO_WARP {
    pub iNPC_ID: i32,
    pub iWarpID: i32,
    pub eIL1: i32,
    pub iItemSlot1: i32,
    pub eIL2: i32,
    pub iItemSlot2: i32,
    pub iPC_Level: i32,
    pub iPayFlag: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_TIME_TO_GO_WARP {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_RECV_EMAIL_ITEM_ALL {
    pub iEmailIndex: i64,
}
impl FFPacket for sP_CL2FE_REQ_PC_RECV_EMAIL_ITEM_ALL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_CHANNEL_INFO {
    pub UNUSED: u8,
}
impl FFPacket for sP_CL2FE_REQ_CHANNEL_INFO {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_CHANNEL_NUM {
    pub UNUSED: u8,
}
impl FFPacket for sP_CL2FE_REQ_PC_CHANNEL_NUM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_WARP_CHANNEL {
    pub iChannelNum: i32,
    pub iWarpType: i8,
}
impl FFPacket for sP_CL2FE_REQ_PC_WARP_CHANNEL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_LOADING_COMPLETE {
    pub iPC_ID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_LOADING_COMPLETE {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_FIND_NAME_MAKE_BUDDY {
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
}
impl FFPacket for sP_CL2FE_REQ_PC_FIND_NAME_MAKE_BUDDY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_FIND_NAME_ACCEPT_BUDDY {
    pub iAcceptFlag: i32,
    pub iBuddyPCUID: i64,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
}
impl FFPacket for sP_CL2FE_REQ_PC_FIND_NAME_ACCEPT_BUDDY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_ATTACK_CHARs {
    pub iTargetCnt: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_ATTACK_CHARs {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_PC_STREETSTALL_REQ_READY {
    pub iStreetStallItemInvenSlotNum: i32,
}
impl FFPacket for sP_CL2FE_PC_STREETSTALL_REQ_READY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_PC_STREETSTALL_REQ_CANCEL {
    pub iPC_ID: i32,
}
impl FFPacket for sP_CL2FE_PC_STREETSTALL_REQ_CANCEL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_PC_STREETSTALL_REQ_REGIST_ITEM {
    pub iItemListNum: i32,
    pub iItemInvenSlotNum: i32,
    pub Item: sItemBase,
    pub iPrice: i32,
}
impl FFPacket for sP_CL2FE_PC_STREETSTALL_REQ_REGIST_ITEM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_PC_STREETSTALL_REQ_UNREGIST_ITEM {
    pub iItemListNum: i32,
}
impl FFPacket for sP_CL2FE_PC_STREETSTALL_REQ_UNREGIST_ITEM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_PC_STREETSTALL_REQ_SALE_START {
    pub iStreetStallItemInvenSlotNum: i32,
}
impl FFPacket for sP_CL2FE_PC_STREETSTALL_REQ_SALE_START {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_PC_STREETSTALL_REQ_ITEM_LIST {
    pub iStreetStallPC_ID: i32,
}
impl FFPacket for sP_CL2FE_PC_STREETSTALL_REQ_ITEM_LIST {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_PC_STREETSTALL_REQ_ITEM_BUY {
    pub iStreetStallPC_ID: i32,
    pub iItemListNum: i32,
    pub iEmptyInvenSlotNum: i32,
}
impl FFPacket for sP_CL2FE_PC_STREETSTALL_REQ_ITEM_BUY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_ITEM_COMBINATION {
    pub iCostumeItemSlot: i32,
    pub iStatItemSlot: i32,
    pub iCashItemSlot1: i32,
    pub iCashItemSlot2: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_ITEM_COMBINATION {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_GM_REQ_SET_PC_SKILL {
    pub iSkillSlotNum: i32,
    pub iSkillID: i32,
}
impl FFPacket for sP_CL2FE_GM_REQ_SET_PC_SKILL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_SKILL_ADD {
    pub iSkillSlotNum: i32,
    pub iSkillID: i32,
    pub iSkillItemInvenSlotNum: i32,
    pub iPreSkillSlotNum: i32,
    pub iPreSkillID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_SKILL_ADD {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_SKILL_DEL {
    pub iSkillSlotNum: i32,
    pub iSkillID: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_SKILL_DEL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_SKILL_USE {
    pub iSkillSlotNum: i32,
    pub iSkillID: i32,
    pub iMoveFlag: i32,
    pub iFromX: i32,
    pub iFromY: i32,
    pub iFromZ: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
    pub iMainTargetType: i32,
    pub iMainTargetID: i32,
    pub iTargetLocationX: i32,
    pub iTargetLocationY: i32,
    pub iTargetLocationZ: i32,
    pub iTargetCount: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_SKILL_USE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_ROPE {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub iRopeID: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_ROPE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_BELT {
    pub iCliTime: u64,
    pub iLcX: i32,
    pub iLcY: i32,
    pub iLcZ: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub bDown: i32,
    pub iBeltID: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_BELT {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_VEHICLE_ON {
    pub UNUSED: u8,
}
impl FFPacket for sP_CL2FE_REQ_PC_VEHICLE_ON {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_VEHICLE_OFF {
    pub UNUSED: u8,
}
impl FFPacket for sP_CL2FE_REQ_PC_VEHICLE_OFF {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_REGIST_QUICK_SLOT {
    pub iSlotNum: i32,
    pub iItemType: i16,
    pub iItemID: i16,
}
impl FFPacket for sP_CL2FE_REQ_PC_REGIST_QUICK_SLOT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_DISASSEMBLE_ITEM {
    pub iItemSlot: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_DISASSEMBLE_ITEM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_GM_REQ_REWARD_RATE {
    pub iGetSet: i32,
    pub iRewardType: i32,
    pub iRewardRateIndex: i32,
    pub iSetRateValue: i32,
}
impl FFPacket for sP_CL2FE_GM_REQ_REWARD_RATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2FE_REQ_PC_ITEM_ENCHANT {
    pub iEnchantItemSlot: i32,
    pub iWeaponMaterialItemSlot: i32,
    pub iDefenceMaterialItemSlot: i32,
    pub iCashItemSlot1: i32,
    pub iCashItemSlot2: i32,
}
impl FFPacket for sP_CL2FE_REQ_PC_ITEM_ENCHANT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_LOGIN {
    pub szID: [u16; 33],
    pub szPassword: [u16; 33],
    pub iClientVerA: i32,
    pub iClientVerB: i32,
    pub iClientVerC: i32,
    pub iLoginType: i32,
    pub szCookie_TEGid: [u8; 64],
    pub szCookie_authid: [u8; 255],
}
impl FFPacket for sP_CL2LS_REQ_LOGIN {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_CHECK_CHAR_NAME {
    pub iFNCode: i32,
    pub iLNCode: i32,
    pub iMNCode: i32,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
}
impl FFPacket for sP_CL2LS_REQ_CHECK_CHAR_NAME {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_SAVE_CHAR_NAME {
    pub iSlotNum: i8,
    pub iGender: i8,
    pub iFNCode: i32,
    pub iLNCode: i32,
    pub iMNCode: i32,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
}
impl FFPacket for sP_CL2LS_REQ_SAVE_CHAR_NAME {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_CHAR_CREATE {
    pub PCStyle: sPCStyle,
    pub sOn_Item: sOnItem,
    pub sOn_Item_Index: sOnItem_Index,
}
impl FFPacket for sP_CL2LS_REQ_CHAR_CREATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_CHAR_SELECT {
    pub iPC_UID: i64,
}
impl FFPacket for sP_CL2LS_REQ_CHAR_SELECT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_CHAR_DELETE {
    pub iPC_UID: i64,
}
impl FFPacket for sP_CL2LS_REQ_CHAR_DELETE {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_SHARD_SELECT {
    pub ShardNum: i8,
}
impl FFPacket for sP_CL2LS_REQ_SHARD_SELECT {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_SHARD_LIST_INFO {
    pub UNUSED: u8,
}
impl FFPacket for sP_CL2LS_REQ_SHARD_LIST_INFO {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_CHECK_NAME_LIST {
    pub iFNCode: i32,
    pub iMNCode: i32,
    pub iLNCode: i32,
}
impl FFPacket for sP_CL2LS_CHECK_NAME_LIST {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_SAVE_CHAR_TUTOR {
    pub iPC_UID: i64,
    pub iTutorialFlag: i8,
}
impl FFPacket for sP_CL2LS_REQ_SAVE_CHAR_TUTOR {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_PC_EXIT_DUPLICATE {
    pub szID: [u16; 33],
    pub szPassword: [u16; 33],
}
impl FFPacket for sP_CL2LS_REQ_PC_EXIT_DUPLICATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REP_LIVE_CHECK {
    pub iTempValue: i32,
}
impl FFPacket for sP_CL2LS_REP_LIVE_CHECK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_CHANGE_CHAR_NAME {
    pub iPCUID: i64,
    pub iSlotNum: i8,
    pub iGender: i8,
    pub iFNCode: i32,
    pub iLNCode: i32,
    pub iMNCode: i32,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
}
impl FFPacket for sP_CL2LS_REQ_CHANGE_CHAR_NAME {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_CL2LS_REQ_SERVER_SELECT {
    pub ServerNum: i8,
}
impl FFPacket for sP_CL2LS_REQ_SERVER_SELECT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPacket {
    pub dwType: u32,
    pub szData: [u8; 4096],
}
impl FFPacket for sPacket {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPacket_Full {
    pub dwSize: u32,
    pub dwType: u32,
    pub szData: [u8; 4096],
}
impl FFPacket for sPacket_Full {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPacket2x {
    pub dwType: u32,
    pub szData: [u8; 8192],
}
impl FFPacket for sPacket2x {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sPacket2x_Full {
    pub dwSize: u32,
    pub dwType: u32,
    pub szData: [u8; 8192],
}
impl FFPacket for sPacket2x_Full {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_ERROR {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_ERROR {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_ENTER_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_ENTER_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_ENTER_SUCC {
    pub iID: i32,
    pub PCLoadData2CL: sPCLoadData2CL,
    pub uiSvrTime: u64,
}
impl FFPacket for sP_FE2CL_REP_PC_ENTER_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_NEW {
    pub PCAppearanceData: sPCAppearanceData,
}
impl FFPacket for sP_FE2CL_PC_NEW {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_EXIT_FAIL {
    pub iID: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_EXIT_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_EXIT_SUCC {
    pub iID: i32,
    pub iExitCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_EXIT_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_EXIT {
    pub iID: i32,
    pub iExitType: i32,
}
impl FFPacket for sP_FE2CL_PC_EXIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_AROUND {
    pub iPCCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_AROUND {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_MOVE {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
    pub iID: i32,
    pub iSvrTime: u64,
}
impl FFPacket for sP_FE2CL_PC_MOVE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STOP {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iID: i32,
    pub iSvrTime: u64,
}
impl FFPacket for sP_FE2CL_PC_STOP {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_JUMP {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iVX: i32,
    pub iVY: i32,
    pub iVZ: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
    pub iID: i32,
    pub iSvrTime: u64,
}
impl FFPacket for sP_FE2CL_PC_JUMP {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_ENTER {
    pub NPCAppearanceData: sNPCAppearanceData,
}
impl FFPacket for sP_FE2CL_NPC_ENTER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_EXIT {
    pub iNPC_ID: i32,
}
impl FFPacket for sP_FE2CL_NPC_EXIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_MOVE {
    pub iNPC_ID: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
    pub iSpeed: i32,
    pub iMoveStyle: i16,
}
impl FFPacket for sP_FE2CL_NPC_MOVE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_NEW {
    pub NPCAppearanceData: sNPCAppearanceData,
}
impl FFPacket for sP_FE2CL_NPC_NEW {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_AROUND {
    pub iNPCCnt: i32,
}
impl FFPacket for sP_FE2CL_NPC_AROUND {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_AROUND_DEL_PC {
    pub iPCCnt: i32,
}
impl FFPacket for sP_FE2CL_AROUND_DEL_PC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_AROUND_DEL_NPC {
    pub iNPCCnt: i32,
}
impl FFPacket for sP_FE2CL_AROUND_DEL_NPC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_FREECHAT_MESSAGE_SUCC {
    pub iPC_ID: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_FREECHAT_MESSAGE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_FREECHAT_MESSAGE_FAIL {
    pub iErrorCode: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_FREECHAT_MESSAGE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_ATTACK_NPCs_SUCC {
    pub iBatteryW: i32,
    pub iNPCCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_ATTACK_NPCs_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_ATTACK_NPCs {
    pub iPC_ID: i32,
    pub iNPCCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_ATTACK_NPCs {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_ATTACK_PCs {
    pub iNPC_ID: i32,
    pub iPCCnt: i32,
}
impl FFPacket for sP_FE2CL_NPC_ATTACK_PCs {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_REGEN_SUCC {
    pub PCRegenData: sPCRegenData,
    pub bMoveLocation: i32,
    pub iFusionMatter: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_REGEN_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_MENUCHAT_MESSAGE_SUCC {
    pub iPC_ID: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_MENUCHAT_MESSAGE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_MENUCHAT_MESSAGE_FAIL {
    pub iErrorCode: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_MENUCHAT_MESSAGE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_ITEM_MOVE_SUCC {
    pub eFrom: i32,
    pub iFromSlotNum: i32,
    pub FromSlotItem: sItemBase,
    pub eTo: i32,
    pub iToSlotNum: i32,
    pub ToSlotItem: sItemBase,
}
impl FFPacket for sP_FE2CL_PC_ITEM_MOVE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_EQUIP_CHANGE {
    pub iPC_ID: i32,
    pub iEquipSlotNum: i32,
    pub EquipSlotItem: sItemBase,
}
impl FFPacket for sP_FE2CL_PC_EQUIP_CHANGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TASK_START_SUCC {
    pub iTaskNum: i32,
    pub iRemainTime: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TASK_START_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TASK_START_FAIL {
    pub iTaskNum: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TASK_START_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TASK_END_SUCC {
    pub iTaskNum: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TASK_END_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TASK_END_FAIL {
    pub iTaskNum: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TASK_END_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_SKILL_READY {
    pub iNPC_ID: i32,
    pub iSkillID: i16,
    pub iValue1: i32,
    pub iValue2: i32,
    pub iValue3: i32,
}
impl FFPacket for sP_FE2CL_NPC_SKILL_READY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_SKILL_FIRE {
    pub iNPC_ID: i32,
    pub iSkillID: i16,
    pub iVX: i32,
    pub iVY: i32,
    pub iVZ: i32,
}
impl FFPacket for sP_FE2CL_NPC_SKILL_FIRE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_SKILL_HIT {
    pub iNPC_ID: i32,
    pub iSkillID: i16,
    pub iValue1: i32,
    pub iValue2: i32,
    pub iValue3: i32,
    pub eST: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_NPC_SKILL_HIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_SKILL_CORRUPTION_READY {
    pub iNPC_ID: i32,
    pub iSkillID: i16,
    pub iStyle: i16,
    pub iValue1: i32,
    pub iValue2: i32,
    pub iValue3: i32,
}
impl FFPacket for sP_FE2CL_NPC_SKILL_CORRUPTION_READY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_SKILL_CORRUPTION_HIT {
    pub iNPC_ID: i32,
    pub iSkillID: i16,
    pub iStyle: i16,
    pub iValue1: i32,
    pub iValue2: i32,
    pub iValue3: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_NPC_SKILL_CORRUPTION_HIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_SKILL_CANCEL {
    pub iNPC_ID: i32,
}
impl FFPacket for sP_FE2CL_NPC_SKILL_CANCEL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_NANO_EQUIP_SUCC {
    pub iNanoID: i16,
    pub iNanoSlotNum: i16,
    pub bNanoDeactive: i32,
}
impl FFPacket for sP_FE2CL_REP_NANO_EQUIP_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_NANO_UNEQUIP_SUCC {
    pub iNanoSlotNum: i16,
    pub bNanoDeactive: i32,
}
impl FFPacket for sP_FE2CL_REP_NANO_UNEQUIP_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_NANO_ACTIVE_SUCC {
    pub iActiveNanoSlotNum: i16,
    pub eCSTB___Add: i32,
}
impl FFPacket for sP_FE2CL_REP_NANO_ACTIVE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_NANO_TUNE_SUCC {
    pub iNanoID: i16,
    pub iSkillID: i16,
    pub iPC_FusionMatter: i32,
    pub aiItemSlotNum: [i32; 10],
    pub aItem: [sItemBase; 10],
}
impl FFPacket for sP_FE2CL_REP_NANO_TUNE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NANO_ACTIVE {
    pub iPC_ID: i32,
    pub Nano: sNano,
    pub iConditionBitFlag: i32,
    pub eCSTB___Add: i32,
}
impl FFPacket for sP_FE2CL_NANO_ACTIVE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NANO_SKILL_USE_SUCC {
    pub iPC_ID: i32,
    pub iBulletID: i8,
    pub iSkillID: i16,
    pub iArg1: i32,
    pub iArg2: i32,
    pub iArg3: i32,
    pub bNanoDeactive: i32,
    pub iNanoID: i16,
    pub iNanoStamina: i16,
    pub eST: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_NANO_SKILL_USE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NANO_SKILL_USE {
    pub iPC_ID: i32,
    pub iBulletID: i8,
    pub iSkillID: i16,
    pub iArg1: i32,
    pub iArg2: i32,
    pub iArg3: i32,
    pub bNanoDeactive: i32,
    pub iNanoID: i16,
    pub iNanoStamina: i16,
    pub eST: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_NANO_SKILL_USE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TASK_STOP_SUCC {
    pub iTaskNum: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TASK_STOP_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TASK_STOP_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TASK_STOP_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TASK_CONTINUE_SUCC {
    pub iTaskNum: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TASK_CONTINUE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TASK_CONTINUE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TASK_CONTINUE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_GOTO_SUCC {
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_GOTO_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_CHARGE_NANO_STAMINA {
    pub iBatteryN: i32,
    pub iNanoID: i16,
    pub iNanoStamina: i16,
}
impl FFPacket for sP_FE2CL_REP_CHARGE_NANO_STAMINA {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TICK {
    pub iHP: i32,
    pub aNano: [sNano; 3],
    pub iBatteryN: i32,
    pub bResetMissionFlag: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TICK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_KILL_QUEST_NPCs_SUCC {
    pub iNPCID: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_KILL_QUEST_NPCs_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_ITEM_BUY_SUCC {
    pub iCandy: i32,
    pub iInvenSlotNum: i32,
    pub Item: sItemBase,
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_ITEM_BUY_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_ITEM_BUY_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_ITEM_BUY_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_ITEM_SELL_SUCC {
    pub iCandy: i32,
    pub iInvenSlotNum: i32,
    pub Item: sItemBase,
    pub ItemStay: sItemBase,
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_ITEM_SELL_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_ITEM_SELL_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_ITEM_SELL_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_ITEM_DELETE_SUCC {
    pub eIL: i32,
    pub iSlotNum: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_ITEM_DELETE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_ROCKET_STYLE_READY {
    pub iPC_ID: i32,
    pub iSkillID: i32,
}
impl FFPacket for sP_FE2CL_PC_ROCKET_STYLE_READY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_ROCKET_STYLE_FIRE_SUCC {
    pub iSkillID: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
    pub iBulletID: i8,
    pub Bullet: sPCBullet,
    pub iBatteryW: i32,
    pub bNanoDeactive: i32,
    pub iNanoID: i16,
    pub iNanoStamina: i16,
}
impl FFPacket for sP_FE2CL_REP_PC_ROCKET_STYLE_FIRE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_ROCKET_STYLE_FIRE {
    pub iPC_ID: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
    pub iBulletID: i8,
    pub Bullet: sPCBullet,
    pub bNanoDeactive: i32,
}
impl FFPacket for sP_FE2CL_PC_ROCKET_STYLE_FIRE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_ROCKET_STYLE_HIT {
    pub iPC_ID: i32,
    pub iBulletID: i8,
    pub Bullet: sPCBullet,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_ROCKET_STYLE_HIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GRENADE_STYLE_READY {
    pub iPC_ID: i32,
    pub iSkillID: i32,
}
impl FFPacket for sP_FE2CL_PC_GRENADE_STYLE_READY {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_GRENADE_STYLE_FIRE_SUCC {
    pub iSkillID: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
    pub iBulletID: i8,
    pub Bullet: sPCBullet,
    pub iBatteryW: i32,
    pub bNanoDeactive: i32,
    pub iNanoID: i16,
    pub iNanoStamina: i16,
}
impl FFPacket for sP_FE2CL_REP_PC_GRENADE_STYLE_FIRE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GRENADE_STYLE_FIRE {
    pub iPC_ID: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
    pub iBulletID: i8,
    pub Bullet: sPCBullet,
    pub bNanoDeactive: i32,
}
impl FFPacket for sP_FE2CL_PC_GRENADE_STYLE_FIRE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GRENADE_STYLE_HIT {
    pub iPC_ID: i32,
    pub iBulletID: i8,
    pub Bullet: sPCBullet,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_GRENADE_STYLE_HIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_OFFER {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_OFFER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_OFFER_CANCEL {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_OFFER_CANCEL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_OFFER_SUCC {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_OFFER_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_OFFER_REFUSAL {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_OFFER_REFUSAL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_OFFER_ABORT {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub iErrorCode: i16,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_OFFER_ABORT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_CONFIRM {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_CONFIRM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_CONFIRM_CANCEL {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_CONFIRM_CANCEL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_CONFIRM_ABORT {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_CONFIRM_ABORT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_CONFIRM_SUCC {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub Item: [sItemTrade; 12],
    pub iCandy: i32,
    pub ItemStay: [sItemTrade; 12],
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_CONFIRM_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_CONFIRM_FAIL {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_CONFIRM_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_ITEM_REGISTER_SUCC {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub TradeItem: sItemTrade,
    pub InvenItem: sItemTrade,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_ITEM_REGISTER_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_ITEM_REGISTER_FAIL {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_ITEM_REGISTER_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_ITEM_UNREGISTER_SUCC {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub TradeItem: sItemTrade,
    pub InvenItem: sItemTrade,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_ITEM_UNREGISTER_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_ITEM_UNREGISTER_FAIL {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_ITEM_UNREGISTER_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_CASH_REGISTER_SUCC {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub iCandy: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_CASH_REGISTER_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_CASH_REGISTER_FAIL {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_CASH_REGISTER_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_EMOTES_CHAT {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_EMOTES_CHAT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_NANO_CREATE_SUCC {
    pub iPC_FusionMatter: i32,
    pub iQuestItemSlotNum: i32,
    pub QuestItem: sItemBase,
    pub Nano: sNano,
    pub iPC_Level: i16,
}
impl FFPacket for sP_FE2CL_REP_PC_NANO_CREATE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_NANO_CREATE_FAIL {
    pub iPC_ID: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_NANO_CREATE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_NANO_TUNE_FAIL {
    pub iPC_ID: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_NANO_TUNE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_BANK_OPEN_SUCC {
    pub aBank: [sItemBase; 119],
    pub iExtraBank: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_BANK_OPEN_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_BANK_OPEN_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_BANK_OPEN_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_BANK_CLOSE_SUCC {
    pub iPC_ID: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_BANK_CLOSE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_BANK_CLOSE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_BANK_CLOSE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_START_SUCC {
    pub iNPC_ID: i32,
    pub iVendorID: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_START_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_START_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_START_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_TABLE_UPDATE_SUCC {
    pub item: [sItemVendor; 20],
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_TABLE_UPDATE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_TABLE_UPDATE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_TABLE_UPDATE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_ITEM_RESTORE_BUY_SUCC {
    pub iCandy: i32,
    pub iInvenSlotNum: i32,
    pub Item: sItemBase,
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_ITEM_RESTORE_BUY_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_ITEM_RESTORE_BUY_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_ITEM_RESTORE_BUY_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_CHAR_TIME_BUFF_TIME_OUT {
    pub eCT: i32,
    pub iID: i32,
    pub iConditionBitFlag: i32,
}
impl FFPacket for sP_FE2CL_CHAR_TIME_BUFF_TIME_OUT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_GIVE_ITEM_SUCC {
    pub eIL: i32,
    pub iSlotNum: i32,
    pub Item: sItemBase,
}
impl FFPacket for sP_FE2CL_REP_PC_GIVE_ITEM_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_GIVE_ITEM_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_GIVE_ITEM_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_BUDDYLIST_INFO_SUCC {
    pub iID: i32,
    pub iPCUID: i64,
    pub iListNum: i8,
    pub iBuddyCnt: i8,
}
impl FFPacket for sP_FE2CL_REP_PC_BUDDYLIST_INFO_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_BUDDYLIST_INFO_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_BUDDYLIST_INFO_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_REQUEST_MAKE_BUDDY_SUCC {
    pub iRequestID: i32,
    pub iBuddyID: i32,
    pub iBuddyPCUID: i64,
}
impl FFPacket for sP_FE2CL_REP_REQUEST_MAKE_BUDDY_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_REQUEST_MAKE_BUDDY_FAIL {
    pub iBuddyID: i32,
    pub iBuddyPCUID: i64,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_REQUEST_MAKE_BUDDY_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_ACCEPT_MAKE_BUDDY_SUCC {
    pub iBuddySlot: i8,
    pub BuddyInfo: sBuddyBaseInfo,
}
impl FFPacket for sP_FE2CL_REP_ACCEPT_MAKE_BUDDY_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_ACCEPT_MAKE_BUDDY_FAIL {
    pub iBuddyID: i32,
    pub iBuddyPCUID: i64,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_ACCEPT_MAKE_BUDDY_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_BUDDY_FREECHAT_MESSAGE_SUCC {
    pub iFromPCUID: i64,
    pub iToPCUID: i64,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_BUDDY_FREECHAT_MESSAGE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_BUDDY_FREECHAT_MESSAGE_FAIL {
    pub iErrorCode: i32,
    pub iToPCUID: i64,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_BUDDY_FREECHAT_MESSAGE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_BUDDY_MENUCHAT_MESSAGE_SUCC {
    pub iFromPCUID: i64,
    pub iToPCUID: i64,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_BUDDY_MENUCHAT_MESSAGE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_BUDDY_MENUCHAT_MESSAGE_FAIL {
    pub iErrorCode: i32,
    pub iToPCUID: i64,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_BUDDY_MENUCHAT_MESSAGE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_GET_BUDDY_STYLE_SUCC {
    pub iBuddyPCUID: i64,
    pub iBuddySlot: i8,
    pub sBuddyStyle: sBuddyStyleInfo,
}
impl FFPacket for sP_FE2CL_REP_GET_BUDDY_STYLE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_GET_BUDDY_STYLE_FAIL {
    pub iErrorCode: i32,
    pub iBuddyPCUID: i64,
}
impl FFPacket for sP_FE2CL_REP_GET_BUDDY_STYLE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_GET_BUDDY_STATE_SUCC {
    pub aBuddyID: [i32; 50],
    pub aBuddyState: [u8; 50],
}
impl FFPacket for sP_FE2CL_REP_GET_BUDDY_STATE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_GET_BUDDY_STATE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_GET_BUDDY_STATE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SET_BUDDY_BLOCK_SUCC {
    pub iBuddyPCUID: i64,
    pub iBuddySlot: i8,
}
impl FFPacket for sP_FE2CL_REP_SET_BUDDY_BLOCK_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SET_BUDDY_BLOCK_FAIL {
    pub iBuddyPCUID: i64,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SET_BUDDY_BLOCK_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_REMOVE_BUDDY_SUCC {
    pub iBuddyPCUID: i64,
    pub iBuddySlot: i8,
}
impl FFPacket for sP_FE2CL_REP_REMOVE_BUDDY_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_REMOVE_BUDDY_FAIL {
    pub iBuddyPCUID: i64,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_REMOVE_BUDDY_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_JUMPPAD {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iVX: i32,
    pub iVY: i32,
    pub iVZ: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iPC_ID: i32,
    pub iSvrTime: u64,
}
impl FFPacket for sP_FE2CL_PC_JUMPPAD {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_LAUNCHER {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iVX: i32,
    pub iVY: i32,
    pub iVZ: i32,
    pub iAngle: i32,
    pub iSpeed: i32,
    pub iPC_ID: i32,
    pub iSvrTime: u64,
}
impl FFPacket for sP_FE2CL_PC_LAUNCHER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_ZIPLINE {
    pub iCliTime: u64,
    pub iStX: i32,
    pub iStY: i32,
    pub iStZ: i32,
    pub fMovDistance: f32,
    pub fMaxDistance: f32,
    pub fDummy: f32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub bDown: i32,
    pub iRollMax: i32,
    pub iRoll: u8,
    pub iAngle: i32,
    pub iSpeed: i32,
    pub iPC_ID: i32,
    pub iSvrTime: u64,
}
impl FFPacket for sP_FE2CL_PC_ZIPLINE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_MOVEPLATFORM {
    pub iCliTime: u64,
    pub iLcX: i32,
    pub iLcY: i32,
    pub iLcZ: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub bDown: i32,
    pub iPlatformID: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
    pub iPC_ID: i32,
    pub iSvrTime: u64,
}
impl FFPacket for sP_FE2CL_PC_MOVEPLATFORM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_SLOPE {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iAngle: i32,
    pub iSpeed: i32,
    pub cKeyValue: u8,
    pub iPC_ID: i32,
    pub iSvrTime: u64,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub iSlopeID: i32,
}
impl FFPacket for sP_FE2CL_PC_SLOPE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STATE_CHANGE {
    pub iPC_ID: i32,
    pub iState: i8,
}
impl FFPacket for sP_FE2CL_PC_STATE_CHANGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_REQUEST_MAKE_BUDDY_SUCC_TO_ACCEPTER {
    pub iRequestID: i32,
    pub iBuddyID: i32,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
}
impl FFPacket for sP_FE2CL_REP_REQUEST_MAKE_BUDDY_SUCC_TO_ACCEPTER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_REWARD_ITEM {
    pub m_iCandy: i32,
    pub m_iFusionMatter: i32,
    pub m_iBatteryN: i32,
    pub m_iBatteryW: i32,
    pub iItemCnt: i8,
    pub iFatigue: i32,
    pub iFatigue_Level: i32,
    pub iNPC_TypeID: i32,
    pub iTaskID: i32,
}
impl FFPacket for sP_FE2CL_REP_REWARD_ITEM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_ITEM_CHEST_OPEN_SUCC {
    pub iSlotNum: i32,
}
impl FFPacket for sP_FE2CL_REP_ITEM_CHEST_OPEN_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_ITEM_CHEST_OPEN_FAIL {
    pub iSlotNum: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_ITEM_CHEST_OPEN_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_CHAR_TIME_BUFF_TIME_TICK {
    pub eCT: i32,
    pub iID: i32,
    pub iTB_ID: i16,
}
impl FFPacket for sP_FE2CL_CHAR_TIME_BUFF_TIME_TICK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_BATTERY_BUY_SUCC {
    pub iCandy: i32,
    pub iBatteryW: i32,
    pub iBatteryN: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_BATTERY_BUY_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_VENDOR_BATTERY_BUY_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_VENDOR_BATTERY_BUY_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_ROCKET_STYLE_FIRE {
    pub iNPC_ID: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
    pub iBulletID: i8,
    pub Bullet: sNPCBullet,
}
impl FFPacket for sP_FE2CL_NPC_ROCKET_STYLE_FIRE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_GRENADE_STYLE_FIRE {
    pub iNPC_ID: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
    pub iBulletID: i8,
    pub Bullet: sNPCBullet,
}
impl FFPacket for sP_FE2CL_NPC_GRENADE_STYLE_FIRE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_BULLET_STYLE_HIT {
    pub iNPC_ID: i32,
    pub iBulletID: i8,
    pub Bullet: sNPCBullet,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_NPC_BULLET_STYLE_HIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_CHARACTER_ATTACK_CHARACTERs {
    pub eCT: i32,
    pub iCharacterID: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_CHARACTER_ATTACK_CHARACTERs {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GROUP_INVITE {
    pub iHostID: i32,
}
impl FFPacket for sP_FE2CL_PC_GROUP_INVITE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GROUP_INVITE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_GROUP_INVITE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GROUP_INVITE_REFUSE {
    pub iID_To: i32,
}
impl FFPacket for sP_FE2CL_PC_GROUP_INVITE_REFUSE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GROUP_JOIN {
    pub iID_NewMember: i32,
    pub iMemberPCCnt: i32,
    pub iMemberNPCCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_GROUP_JOIN {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GROUP_JOIN_FAIL {
    pub iID: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_GROUP_JOIN_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GROUP_JOIN_SUCC {
    pub iID_NewMember: i32,
    pub iMemberPCCnt: i32,
    pub iMemberNPCCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_GROUP_JOIN_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GROUP_LEAVE {
    pub iID_LeaveMember: i32,
    pub iMemberPCCnt: i32,
    pub iMemberNPCCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_GROUP_LEAVE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GROUP_LEAVE_FAIL {
    pub iID: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_GROUP_LEAVE_FAIL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GROUP_LEAVE_SUCC {
    pub UNUSED: u8,
}
impl FFPacket for sP_FE2CL_PC_GROUP_LEAVE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_GROUP_MEMBER_INFO {
    pub iID: i32,
    pub iMemberPCCnt: i32,
    pub iMemberNPCCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_GROUP_MEMBER_INFO {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_WARP_USE_NPC_SUCC {
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub eIL: i32,
    pub iItemSlotNum: i32,
    pub Item: sItemBase,
    pub iCandy: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_WARP_USE_NPC_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_WARP_USE_NPC_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_WARP_USE_NPC_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_AVATAR_EMOTES_CHAT {
    pub iID_From: i32,
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_AVATAR_EMOTES_CHAT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_CHANGE_MENTOR_SUCC {
    pub iMentor: i16,
    pub iMentorCnt: i16,
    pub iFusionMatter: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_CHANGE_MENTOR_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_CHANGE_MENTOR_FAIL {
    pub iMentor: i16,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_CHANGE_MENTOR_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_GET_MEMBER_STYLE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_GET_MEMBER_STYLE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_GET_MEMBER_STYLE_SUCC {
    pub iMemberID: i32,
    pub iMemberUID: i64,
    pub BuddyStyleInfo: sBuddyStyleInfo,
}
impl FFPacket for sP_FE2CL_REP_GET_MEMBER_STYLE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_GET_GROUP_STYLE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_GET_GROUP_STYLE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_GET_GROUP_STYLE_SUCC {
    pub iMemberCnt: i32,
}
impl FFPacket for sP_FE2CL_REP_GET_GROUP_STYLE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_REGEN {
    pub PCRegenDataForOtherPC: sPCRegenDataForOtherPC,
}
impl FFPacket for sP_FE2CL_PC_REGEN {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_INSTANCE_MAP_INFO {
    pub iInstanceMapNum: i32,
    pub iCreateTick: u64,
    pub iMapCoordX_Min: i32,
    pub iMapCoordX_Max: i32,
    pub iMapCoordY_Min: i32,
    pub iMapCoordY_Max: i32,
    pub iMapCoordZ_Min: i32,
    pub iMapCoordZ_Max: i32,
    pub iEP_ID: i32,
    pub iEPTopRecord_Score: i32,
    pub iEPTopRecord_Rank: i32,
    pub iEPTopRecord_Time: i32,
    pub iEPTopRecord_RingCount: i32,
    pub iEPSwitch_StatusON_Cnt: i32,
}
impl FFPacket for sP_FE2CL_INSTANCE_MAP_INFO {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_TRANSPORTATION_ENTER {
    pub AppearanceData: sTransportationAppearanceData,
}
impl FFPacket for sP_FE2CL_TRANSPORTATION_ENTER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_TRANSPORTATION_EXIT {
    pub eTT: i32,
    pub iT_ID: i32,
}
impl FFPacket for sP_FE2CL_TRANSPORTATION_EXIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_TRANSPORTATION_MOVE {
    pub eTT: i32,
    pub iT_ID: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
    pub iSpeed: i32,
    pub iMoveStyle: i16,
}
impl FFPacket for sP_FE2CL_TRANSPORTATION_MOVE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_TRANSPORTATION_NEW {
    pub AppearanceData: sTransportationAppearanceData,
}
impl FFPacket for sP_FE2CL_TRANSPORTATION_NEW {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_TRANSPORTATION_AROUND {
    pub iCnt: i32,
}
impl FFPacket for sP_FE2CL_TRANSPORTATION_AROUND {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_AROUND_DEL_TRANSPORTATION {
    pub eTT: i32,
    pub iCnt: i32,
}
impl FFPacket for sP_FE2CL_AROUND_DEL_TRANSPORTATION {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_EP_RANK_LIST {
    pub UNUSED: u8,
}
impl FFPacket for sP_FE2CL_REP_EP_RANK_LIST {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_EP_RANK_DETAIL {
    pub UNUSED: u8,
}
impl FFPacket for sP_FE2CL_REP_EP_RANK_DETAIL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_EP_RANK_PC_INFO {
    pub UNUSED: u8,
}
impl FFPacket for sP_FE2CL_REP_EP_RANK_PC_INFO {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_EP_RACE_START_SUCC {
    pub iStartTick: u64,
    pub iLimitTime: i32,
}
impl FFPacket for sP_FE2CL_REP_EP_RACE_START_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_EP_RACE_START_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_EP_RACE_START_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_EP_RACE_END_SUCC {
    pub iEPRaceMode: i32,
    pub iEPRaceTime: i32,
    pub iEPRingCnt: i32,
    pub iEPScore: i32,
    pub iEPRank: i32,
    pub iEPRewardFM: i32,
    pub iEPTopScore: i32,
    pub iEPTopRank: i32,
    pub iEPTopTime: i32,
    pub iEPTopRingCount: i32,
    pub iFusionMatter: i32,
    pub RewardItem: sItemReward,
    pub iFatigue: i32,
    pub iFatigue_Level: i32,
}
impl FFPacket for sP_FE2CL_REP_EP_RACE_END_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_EP_RACE_END_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_EP_RACE_END_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_EP_RACE_CANCEL_SUCC {
    pub iTemp: i32,
}
impl FFPacket for sP_FE2CL_REP_EP_RACE_CANCEL_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_EP_RACE_CANCEL_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_EP_RACE_CANCEL_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_EP_GET_RING_SUCC {
    pub iRingLID: i32,
    pub iRingCount_Get: i32,
}
impl FFPacket for sP_FE2CL_REP_EP_GET_RING_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_EP_GET_RING_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_EP_GET_RING_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_IM_CHANGE_SWITCH_STATUS {
    pub iMapNum: i32,
    pub iSwitchLID: i32,
    pub iSwitchGID: i32,
    pub iSwitchStatus: i32,
}
impl FFPacket for sP_FE2CL_REP_IM_CHANGE_SWITCH_STATUS {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_SHINY_ENTER {
    pub ShinyAppearanceData: sShinyAppearanceData,
}
impl FFPacket for sP_FE2CL_SHINY_ENTER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_SHINY_EXIT {
    pub iShinyID: i32,
}
impl FFPacket for sP_FE2CL_SHINY_EXIT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_SHINY_NEW {
    pub ShinyAppearanceData: sShinyAppearanceData,
}
impl FFPacket for sP_FE2CL_SHINY_NEW {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_SHINY_AROUND {
    pub iShinyCnt: i32,
}
impl FFPacket for sP_FE2CL_SHINY_AROUND {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_AROUND_DEL_SHINY {
    pub iShinyCnt: i32,
}
impl FFPacket for sP_FE2CL_AROUND_DEL_SHINY {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SHINY_PICKUP_FAIL {
    pub UNUSED: u8,
}
impl FFPacket for sP_FE2CL_REP_SHINY_PICKUP_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SHINY_PICKUP_SUCC {
    pub iSkillID: i16,
    pub eCSTB: i32,
}
impl FFPacket for sP_FE2CL_REP_SHINY_PICKUP_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_MOVETRANSPORTATION {
    pub iCliTime: u64,
    pub iLcX: i32,
    pub iLcY: i32,
    pub iLcZ: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub iT_ID: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
    pub iPC_ID: i32,
    pub iSvrTime: u64,
}
impl FFPacket for sP_FE2CL_PC_MOVETRANSPORTATION {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_ALL_GROUP_FREECHAT_MESSAGE_SUCC {
    pub iSendPCID: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_ALL_GROUP_FREECHAT_MESSAGE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_ALL_GROUP_FREECHAT_MESSAGE_FAIL {
    pub iSendPCID: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_ALL_GROUP_FREECHAT_MESSAGE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_ANY_GROUP_FREECHAT_MESSAGE_SUCC {
    pub iSendPCID: i32,
    pub iGroupPC_ID: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_ANY_GROUP_FREECHAT_MESSAGE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_ANY_GROUP_FREECHAT_MESSAGE_FAIL {
    pub iSendPCID: i32,
    pub iGroupPC_ID: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_ANY_GROUP_FREECHAT_MESSAGE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_BARKER {
    pub iNPC_ID: i32,
    pub iMissionStringID: i32,
}
impl FFPacket for sP_FE2CL_REP_BARKER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_ALL_GROUP_MENUCHAT_MESSAGE_SUCC {
    pub iSendPCID: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_ALL_GROUP_MENUCHAT_MESSAGE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_ALL_GROUP_MENUCHAT_MESSAGE_FAIL {
    pub iSendPCID: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_ALL_GROUP_MENUCHAT_MESSAGE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_ANY_GROUP_MENUCHAT_MESSAGE_SUCC {
    pub iSendPCID: i32,
    pub iGroupPC_ID: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_ANY_GROUP_MENUCHAT_MESSAGE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SEND_ANY_GROUP_MENUCHAT_MESSAGE_FAIL {
    pub iSendPCID: i32,
    pub iGroupPC_ID: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SEND_ANY_GROUP_MENUCHAT_MESSAGE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_REGIST_TRANSPORTATION_LOCATION_FAIL {
    pub eTT: i32,
    pub iLocationID: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_REGIST_TRANSPORTATION_LOCATION_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_REGIST_TRANSPORTATION_LOCATION_SUCC {
    pub eTT: i32,
    pub iLocationID: i32,
    pub iWarpLocationFlag: i32,
    pub aWyvernLocationFlag: [i64; 2],
}
impl FFPacket for sP_FE2CL_REP_PC_REGIST_TRANSPORTATION_LOCATION_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_WARP_USE_TRANSPORTATION_FAIL {
    pub iTransportationID: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_WARP_USE_TRANSPORTATION_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_WARP_USE_TRANSPORTATION_SUCC {
    pub eTT: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iCandy: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_WARP_USE_TRANSPORTATION_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_ANNOUNCE_MSG {
    pub iAnnounceType: i8,
    pub iDuringTime: i32,
    pub szAnnounceMsg: [u16; 512],
}
impl FFPacket for sP_FE2CL_ANNOUNCE_MSG {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_SPECIAL_STATE_SWITCH_SUCC {
    pub iPC_ID: i32,
    pub iReqSpecialStateFlag: i8,
    pub iSpecialState: i8,
}
impl FFPacket for sP_FE2CL_REP_PC_SPECIAL_STATE_SWITCH_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_SPECIAL_STATE_CHANGE {
    pub iPC_ID: i32,
    pub iReqSpecialStateFlag: i8,
    pub iSpecialState: i8,
}
impl FFPacket for sP_FE2CL_PC_SPECIAL_STATE_CHANGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_GM_REP_PC_SET_VALUE {
    pub iPC_ID: i32,
    pub iSetValueType: i32,
    pub iSetValue: i32,
}
impl FFPacket for sP_FE2CL_GM_REP_PC_SET_VALUE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_GM_PC_CHANGE_VALUE {
    pub iPC_ID: i32,
    pub iSetValueType: i32,
    pub iSetValue: i32,
}
impl FFPacket for sP_FE2CL_GM_PC_CHANGE_VALUE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_GM_REP_PC_LOCATION {
    pub iTargetPC_UID: i64,
    pub iTargetPC_ID: i32,
    pub iShardID: i32,
    pub iMapType: i32,
    pub iMapID: i32,
    pub iMapNum: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub szTargetPC_FirstName: [u16; 10],
    pub szTargetPC_LastName: [u16; 18],
}
impl FFPacket for sP_FE2CL_GM_REP_PC_LOCATION {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_GM_REP_PC_ANNOUNCE {
    pub iAnnounceType: i8,
    pub iDuringTime: i32,
    pub szAnnounceMsg: [u16; 512],
}
impl FFPacket for sP_FE2CL_GM_REP_PC_ANNOUNCE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_BUDDY_WARP_FAIL {
    pub iBuddyPCUID: i64,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_BUDDY_WARP_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_CHANGE_LEVEL {
    pub iPC_ID: i32,
    pub iPC_Level: i16,
}
impl FFPacket for sP_FE2CL_REP_PC_CHANGE_LEVEL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SET_PC_BLOCK_SUCC {
    pub iBlock_ID: i32,
    pub iBlock_PCUID: i64,
    pub iBuddySlot: i8,
}
impl FFPacket for sP_FE2CL_REP_SET_PC_BLOCK_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_SET_PC_BLOCK_FAIL {
    pub iBlock_ID: i32,
    pub iBlock_PCUID: i64,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_SET_PC_BLOCK_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_REGIST_RXCOM {
    pub iMapNum: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
}
impl FFPacket for sP_FE2CL_REP_REGIST_RXCOM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_REGIST_RXCOM_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_REGIST_RXCOM_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_INVEN_FULL_MSG {
    pub iType: i8,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_INVEN_FULL_MSG {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REQ_LIVE_CHECK {
    pub iTempValue: i32,
}
impl FFPacket for sP_FE2CL_REQ_LIVE_CHECK {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_MOTD_LOGIN {
    pub iType: i8,
    pub szSystemMsg: [u16; 512],
}
impl FFPacket for sP_FE2CL_PC_MOTD_LOGIN {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_ITEM_USE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_ITEM_USE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_ITEM_USE_SUCC {
    pub iPC_ID: i32,
    pub eIL: i32,
    pub iSlotNum: i32,
    pub RemainItem: sItemBase,
    pub iSkillID: i16,
    pub eST: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_ITEM_USE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_ITEM_USE {
    pub iPC_ID: i32,
    pub iSkillID: i16,
    pub eST: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_ITEM_USE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_GET_BUDDY_LOCATION_SUCC {
    pub iBuddyPCUID: i64,
    pub iSlotNum: i8,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iShardNum: i8,
}
impl FFPacket for sP_FE2CL_REP_GET_BUDDY_LOCATION_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_GET_BUDDY_LOCATION_FAIL {
    pub iBuddyPCUID: i64,
    pub iSlotNum: i8,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_GET_BUDDY_LOCATION_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_RIDING_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_RIDING_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_RIDING_SUCC {
    pub iPC_ID: i32,
    pub eRT: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_RIDING_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_RIDING {
    pub iPC_ID: i32,
    pub eRT: i32,
}
impl FFPacket for sP_FE2CL_PC_RIDING {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_BROOMSTICK_MOVE {
    pub iPC_ID: i32,
    pub iToX: i32,
    pub iToY: i32,
    pub iToZ: i32,
    pub iSpeed: i32,
}
impl FFPacket for sP_FE2CL_PC_BROOMSTICK_MOVE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_BUDDY_WARP_OTHER_SHARD_SUCC {
    pub iBuddyPCUID: i64,
    pub iShardNum: i8,
    pub iChannelNum: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_BUDDY_WARP_OTHER_SHARD_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_WARP_USE_RECALL_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_WARP_USE_RECALL_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_EXIT_DUPLICATE {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_EXIT_DUPLICATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_MISSION_COMPLETE_SUCC {
    pub iMissionNum: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_MISSION_COMPLETE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_BUFF_UPDATE {
    pub eCSTB: i32,
    pub eTBU: i32,
    pub eTBT: i32,
    pub TimeBuff: sTimeBuff,
    pub iConditionBitFlag: i32,
}
impl FFPacket for sP_FE2CL_PC_BUFF_UPDATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_NEW_EMAIL {
    pub iNewEmailCnt: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_NEW_EMAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_READ_EMAIL_SUCC {
    pub iEmailIndex: i64,
    pub szContent: [u16; 512],
    pub aItem: [sItemBase; 4],
    pub iCash: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_READ_EMAIL_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_READ_EMAIL_FAIL {
    pub iEmailIndex: i64,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_READ_EMAIL_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_RECV_EMAIL_PAGE_LIST_SUCC {
    pub iPageNum: i8,
    pub aEmailInfo: [sEmailInfo; 5],
}
impl FFPacket for sP_FE2CL_REP_PC_RECV_EMAIL_PAGE_LIST_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_RECV_EMAIL_PAGE_LIST_FAIL {
    pub iPageNum: i8,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_RECV_EMAIL_PAGE_LIST_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_DELETE_EMAIL_SUCC {
    pub iEmailIndexArray: [i64; 5],
}
impl FFPacket for sP_FE2CL_REP_PC_DELETE_EMAIL_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_DELETE_EMAIL_FAIL {
    pub iEmailIndexArray: [i64; 5],
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_DELETE_EMAIL_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_SEND_EMAIL_SUCC {
    pub iTo_PCUID: i64,
    pub iCandy: i32,
    pub aItem: [sEmailItemInfoFromCL; 4],
}
impl FFPacket for sP_FE2CL_REP_PC_SEND_EMAIL_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_SEND_EMAIL_FAIL {
    pub iTo_PCUID: i64,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_SEND_EMAIL_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_RECV_EMAIL_ITEM_SUCC {
    pub iEmailIndex: i64,
    pub iSlotNum: i32,
    pub iEmailItemSlot: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_RECV_EMAIL_ITEM_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_RECV_EMAIL_ITEM_FAIL {
    pub iEmailIndex: i64,
    pub iSlotNum: i32,
    pub iEmailItemSlot: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_RECV_EMAIL_ITEM_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_RECV_EMAIL_CANDY_SUCC {
    pub iEmailIndex: i64,
    pub iCandy: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_RECV_EMAIL_CANDY_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_RECV_EMAIL_CANDY_FAIL {
    pub iEmailIndex: i64,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_RECV_EMAIL_CANDY_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_SUDDEN_DEAD {
    pub iPC_ID: i32,
    pub iSuddenDeadReason: i32,
    pub iDamage: i32,
    pub iHP: i32,
}
impl FFPacket for sP_FE2CL_PC_SUDDEN_DEAD {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_GM_REQ_TARGET_PC_SPECIAL_STATE_ONOFF_SUCC {
    pub iTargetPC_ID: i32,
    pub szTargetPC_FirstName: [u16; 10],
    pub szTargetPC_LastName: [u16; 18],
    pub iReqSpecialStateFlag: i8,
    pub iSpecialState: i8,
}
impl FFPacket for sP_FE2CL_REP_GM_REQ_TARGET_PC_SPECIAL_STATE_ONOFF_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_SET_CURRENT_MISSION_ID {
    pub iCurrentMissionID: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_SET_CURRENT_MISSION_ID {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_NPC_GROUP_INVITE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_NPC_GROUP_INVITE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_NPC_GROUP_INVITE_SUCC {
    pub iPC_ID: i32,
    pub iNPC_ID: i32,
    pub iMemberPCCnt: i32,
    pub iMemberNPCCnt: i32,
}
impl FFPacket for sP_FE2CL_REP_NPC_GROUP_INVITE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_NPC_GROUP_KICK_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_NPC_GROUP_KICK_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_NPC_GROUP_KICK_SUCC {
    pub iPC_ID: i32,
    pub iNPC_ID: i32,
    pub iMemberPCCnt: i32,
    pub iMemberNPCCnt: i32,
}
impl FFPacket for sP_FE2CL_REP_NPC_GROUP_KICK_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_EVENT {
    pub iPC_ID: i32,
    pub iEventID: i32,
    pub iEventValue1: i32,
    pub iEventValue2: i32,
    pub iEventValue3: i32,
}
impl FFPacket for sP_FE2CL_PC_EVENT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRANSPORT_WARP_SUCC {
    pub TransportationAppearanceData: sTransportationAppearanceData,
    pub iLcX: i32,
    pub iLcY: i32,
    pub iLcZ: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRANSPORT_WARP_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_TRADE_EMOTES_CHAT_FAIL {
    pub iID_Request: i32,
    pub iID_From: i32,
    pub iID_To: i32,
    pub szFreeChat: [u16; 128],
    pub iEmoteCode: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_TRADE_EMOTES_CHAT_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_RECV_EMAIL_ITEM_ALL_SUCC {
    pub iEmailIndex: i64,
}
impl FFPacket for sP_FE2CL_REP_PC_RECV_EMAIL_ITEM_ALL_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_RECV_EMAIL_ITEM_ALL_FAIL {
    pub iEmailIndex: i64,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_RECV_EMAIL_ITEM_ALL_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_LOADING_COMPLETE_SUCC {
    pub iPC_ID: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_LOADING_COMPLETE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sChannelInfo {
    pub iChannelNum: i32,
    pub iCurrentUserCnt: i32,
}
impl FFPacket for sChannelInfo {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_CHANNEL_INFO {
    pub iCurrChannelNum: i32,
    pub iChannelCnt: i32,
}
impl FFPacket for sP_FE2CL_REP_CHANNEL_INFO {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_CHANNEL_NUM {
    pub iChannelNum: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_CHANNEL_NUM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_WARP_CHANNEL_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_WARP_CHANNEL_FAIL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_WARP_CHANNEL_SUCC {
    pub UNUSED: u8,
}
impl FFPacket for sP_FE2CL_REP_PC_WARP_CHANNEL_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_FIND_NAME_MAKE_BUDDY_SUCC {
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
    pub iPCUID: i64,
    pub iNameCheckFlag: i8,
}
impl FFPacket for sP_FE2CL_REP_PC_FIND_NAME_MAKE_BUDDY_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_FIND_NAME_MAKE_BUDDY_FAIL {
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_FIND_NAME_MAKE_BUDDY_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_FIND_NAME_ACCEPT_BUDDY_FAIL {
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
    pub iPCUID: i64,
    pub iNameCheckFlag: i8,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_FIND_NAME_ACCEPT_BUDDY_FAIL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_BUDDY_WARP_SAME_SHARD_SUCC {
    pub UNUSED: u8,
}
impl FFPacket for sP_FE2CL_REP_PC_BUDDY_WARP_SAME_SHARD_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_ATTACK_CHARs_SUCC {
    pub iBatteryW: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_ATTACK_CHARs_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_ATTACK_CHARs {
    pub iPC_ID: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_ATTACK_CHARs {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_NPC_ATTACK_CHARs {
    pub iNPC_ID: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_NPC_ATTACK_CHARs {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_CHANGE_LEVEL_SUCC {
    pub iLevel: i32,
    pub iFusionMatter: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_CHANGE_LEVEL_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_NANO_CREATE {
    pub iPC_ID: i32,
    pub iNanoID: i16,
}
impl FFPacket for sP_FE2CL_REP_PC_NANO_CREATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_READY_SUCC {
    pub iStreetStallItemInvenSlotNum: i32,
    pub iItemListCountMax: i32,
    pub fTaxPercentage: f32,
    pub iPCCharState: i8,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_READY_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_READY_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_READY_FAIL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_CANCEL_SUCC {
    pub iPCCharState: i8,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_CANCEL_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_CANCEL_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_CANCEL_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_REGIST_ITEM_SUCC {
    pub iItemListNum: i32,
    pub iItemInvenSlotNum: i32,
    pub Item: sItemBase,
    pub iPrice: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_REGIST_ITEM_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_REGIST_ITEM_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_REGIST_ITEM_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_UNREGIST_ITEM_SUCC {
    pub iItemListNum: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_UNREGIST_ITEM_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_UNREGIST_ITEM_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_UNREGIST_ITEM_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_SALE_START_SUCC {
    pub iStreetStallItemInvenSlotNum: i32,
    pub OpenItem: sItemBase,
    pub ePCCharState: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_SALE_START_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_SALE_START_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_SALE_START_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_ITEM_LIST {
    pub iStreetStallPC_ID: i32,
    pub iItemListCount: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_ITEM_LIST {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_ITEM_LIST_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_ITEM_LIST_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_ITEM_BUY_SUCC_BUYER {
    pub iStreetStallPC_ID: i32,
    pub iPC_Candy: i32,
    pub iPC_ItemInvenSlotNum: i32,
    pub PC_Item: sItemBase,
    pub iItemListNum: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_ITEM_BUY_SUCC_BUYER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_ITEM_BUY_SUCC_SELLER {
    pub iBuyerPC_ID: i32,
    pub iStreetStallPC_Candy: i32,
    pub iStreetStallPC_ItemInvenSlotNum: i32,
    pub StreetStallPC_Item: sItemBase,
    pub iItemListNum: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_ITEM_BUY_SUCC_SELLER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_STREETSTALL_REP_ITEM_BUY_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_STREETSTALL_REP_ITEM_BUY_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_ITEM_COMBINATION_SUCC {
    pub iNewItemSlot: i32,
    pub sNewItem: sItemBase,
    pub iStatItemSlot: i32,
    pub iCashItemSlot1: i32,
    pub iCashItemSlot2: i32,
    pub iCandy: i32,
    pub iSuccessFlag: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_ITEM_COMBINATION_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_ITEM_COMBINATION_FAIL {
    pub iErrorCode: i32,
    pub iCostumeItemSlot: i32,
    pub iStatItemSlot: i32,
    pub iCashItemSlot1: i32,
    pub iCashItemSlot2: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_ITEM_COMBINATION_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_CASH_BUFF_UPDATE {
    pub eCSTB: i32,
    pub eTBU: i32,
    pub TimeBuff: sTimeBuff,
    pub iConditionBitFlag: i32,
}
impl FFPacket for sP_FE2CL_PC_CASH_BUFF_UPDATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_SKILL_ADD_SUCC {
    pub iSkillSlotNum: i32,
    pub iSkillID: i32,
    pub iSkillItemInvenSlotNum: i32,
    pub SkillItem: sItemBase,
}
impl FFPacket for sP_FE2CL_REP_PC_SKILL_ADD_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_SKILL_ADD_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_SKILL_ADD_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_SKILL_DEL_SUCC {
    pub iSkillSlotNum: i32,
    pub iSkillID: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_SKILL_DEL_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_SKILL_DEL_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_SKILL_DEL_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_SKILL_USE_SUCC {
    pub iPC_ID: i32,
    pub iSkillSlotNum: i32,
    pub iSkillID: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iAngle: i32,
    pub iBlockMove: i32,
    pub eST: i32,
    pub iTargetID: i32,
    pub iTargetType: i32,
    pub iTargetLocationX: i32,
    pub iTargetLocationY: i32,
    pub iTargetLocationZ: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_SKILL_USE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_SKILL_USE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_SKILL_USE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_SKILL_USE {
    pub iPC_ID: i32,
    pub iSkillSlotNum: i32,
    pub iSkillID: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub iAngle: i32,
    pub iBlockMove: i32,
    pub eST: i32,
    pub iTargetID: i32,
    pub iTargetType: i32,
    pub iTargetLocationX: i32,
    pub iTargetLocationY: i32,
    pub iTargetLocationZ: i32,
    pub iTargetCnt: i32,
}
impl FFPacket for sP_FE2CL_PC_SKILL_USE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_ROPE {
    pub iCliTime: u64,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub iRopeID: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
    pub iPC_ID: i32,
    pub iSvrTime: u64,
}
impl FFPacket for sP_FE2CL_PC_ROPE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_BELT {
    pub iCliTime: u64,
    pub iLcX: i32,
    pub iLcY: i32,
    pub iLcZ: i32,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub fVX: f32,
    pub fVY: f32,
    pub fVZ: f32,
    pub bDown: i32,
    pub iBeltID: i32,
    pub iAngle: i32,
    pub cKeyValue: u8,
    pub iSpeed: i32,
    pub iPC_ID: i32,
    pub iSvrTime: u64,
}
impl FFPacket for sP_FE2CL_PC_BELT {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_VEHICLE_ON_SUCC {
    pub UNUSED: u8,
}
impl FFPacket for sP_FE2CL_PC_VEHICLE_ON_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_VEHICLE_ON_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_VEHICLE_ON_FAIL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_VEHICLE_OFF_SUCC {
    pub UNUSED: u8,
}
impl FFPacket for sP_FE2CL_PC_VEHICLE_OFF_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_VEHICLE_OFF_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_PC_VEHICLE_OFF_FAIL {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_QUICK_SLOT_INFO {
    pub aQuickSlot: [sQuickSlot; 8],
}
impl FFPacket for sP_FE2CL_PC_QUICK_SLOT_INFO {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_REGIST_QUICK_SLOT_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_REGIST_QUICK_SLOT_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_REGIST_QUICK_SLOT_SUCC {
    pub iSlotNum: i32,
    pub iItemType: i16,
    pub iItemID: i16,
}
impl FFPacket for sP_FE2CL_REP_PC_REGIST_QUICK_SLOT_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_PC_DELETE_TIME_LIMIT_ITEM {
    pub iItemListCount: i32,
}
impl FFPacket for sP_FE2CL_PC_DELETE_TIME_LIMIT_ITEM {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_DISASSEMBLE_ITEM_SUCC {
    pub iNewItemSlot: i32,
    pub sNewItem: sItemBase,
}
impl FFPacket for sP_FE2CL_REP_PC_DISASSEMBLE_ITEM_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_DISASSEMBLE_ITEM_FAIL {
    pub iErrorCode: i32,
    pub iItemSlot: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_DISASSEMBLE_ITEM_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_GM_REP_REWARD_RATE_SUCC {
    pub afRewardRate_Taros: [f32; 5],
    pub afRewardRate_FusionMatter: [f32; 5],
}
impl FFPacket for sP_FE2CL_GM_REP_REWARD_RATE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_ITEM_ENCHANT_SUCC {
    pub iEnchantItemSlot: i32,
    pub sEnchantItem: sItemBase,
    pub iWeaponMaterialItemSlot: i32,
    pub sWeaponMaterialItem: sItemBase,
    pub iDefenceMaterialItemSlot: i32,
    pub sDefenceMaterialItem: sItemBase,
    pub iCashItemSlot1: i32,
    pub iCashItemSlot2: i32,
    pub iCandy: i32,
    pub iSuccessFlag: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_ITEM_ENCHANT_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2CL_REP_PC_ITEM_ENCHANT_FAIL {
    pub iErrorCode: i32,
    pub iEnchantItemSlot: i32,
    pub iWeaponMaterialItemSlot: i32,
    pub iDefenceMaterialItemSlot: i32,
    pub iCashItemSlot1: i32,
    pub iCashItemSlot2: i32,
}
impl FFPacket for sP_FE2CL_REP_PC_ITEM_ENCHANT_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_LOGIN_SUCC {
    pub iCharCount: i8,
    pub iSlotNum: i8,
    pub iPaymentFlag: i8,
    pub iTempForPacking4: i8,
    pub uiSvrTime: u64,
    pub szID: [u16; 33],
    pub iOpenBetaFlag: i32,
}
impl FFPacket for sP_LS2CL_REP_LOGIN_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_LOGIN_FAIL {
    pub iErrorCode: i32,
    pub szID: [u16; 33],
}
impl FFPacket for sP_LS2CL_REP_LOGIN_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHAR_INFO {
    pub iSlot: i8,
    pub iLevel: i16,
    pub sPC_Style: sPCStyle,
    pub sPC_Style2: sPCStyle2,
    pub iX: i32,
    pub iY: i32,
    pub iZ: i32,
    pub aEquip: [sItemBase; 9],
}
impl FFPacket for sP_LS2CL_REP_CHAR_INFO {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHECK_CHAR_NAME_SUCC {
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
}
impl FFPacket for sP_LS2CL_REP_CHECK_CHAR_NAME_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHECK_CHAR_NAME_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2CL_REP_CHECK_CHAR_NAME_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_SAVE_CHAR_NAME_SUCC {
    pub iPC_UID: i64,
    pub iSlotNum: i8,
    pub iGender: i8,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
}
impl FFPacket for sP_LS2CL_REP_SAVE_CHAR_NAME_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_SAVE_CHAR_NAME_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2CL_REP_SAVE_CHAR_NAME_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHAR_CREATE_SUCC {
    pub iLevel: i16,
    pub sPC_Style: sPCStyle,
    pub sPC_Style2: sPCStyle2,
    pub sOn_Item: sOnItem,
}
impl FFPacket for sP_LS2CL_REP_CHAR_CREATE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHAR_CREATE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2CL_REP_CHAR_CREATE_FAIL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHAR_SELECT_SUCC {
    pub UNUSED: u8,
}
impl FFPacket for sP_LS2CL_REP_CHAR_SELECT_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHAR_SELECT_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2CL_REP_CHAR_SELECT_FAIL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHAR_DELETE_SUCC {
    pub iSlotNum: i8,
}
impl FFPacket for sP_LS2CL_REP_CHAR_DELETE_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHAR_DELETE_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2CL_REP_CHAR_DELETE_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_SHARD_SELECT_SUCC {
    pub g_FE_ServerIP: [u8; 16],
    pub g_FE_ServerPort: i32,
    pub iEnterSerialKey: i64,
}
impl FFPacket for sP_LS2CL_REP_SHARD_SELECT_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_SHARD_SELECT_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2CL_REP_SHARD_SELECT_FAIL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_VERSION_CHECK_SUCC {
    pub UNUSED: u8,
}
impl FFPacket for sP_LS2CL_REP_VERSION_CHECK_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_VERSION_CHECK_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2CL_REP_VERSION_CHECK_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHECK_NAME_LIST_SUCC {
    pub iFNCode: i32,
    pub iMNCode: i32,
    pub iLNCode: i32,
    pub aNameCodeFlag: [i64; 8],
}
impl FFPacket for sP_LS2CL_REP_CHECK_NAME_LIST_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHECK_NAME_LIST_FAIL {
    pub iFNCode: i32,
    pub iMNCode: i32,
    pub iLNCode: i32,
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2CL_REP_CHECK_NAME_LIST_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_PC_EXIT_DUPLICATE {
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2CL_REP_PC_EXIT_DUPLICATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REQ_LIVE_CHECK {
    pub iTempValue: i32,
}
impl FFPacket for sP_LS2CL_REQ_LIVE_CHECK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHANGE_CHAR_NAME_SUCC {
    pub iPC_UID: i64,
    pub iSlotNum: i8,
    pub szFirstName: [u16; 9],
    pub szLastName: [u16; 17],
}
impl FFPacket for sP_LS2CL_REP_CHANGE_CHAR_NAME_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_CHANGE_CHAR_NAME_FAIL {
    pub iPC_UID: i64,
    pub iSlotNum: i8,
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2CL_REP_CHANGE_CHAR_NAME_FAIL {}

#[repr(packed(1))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2CL_REP_SHARD_LIST_INFO_SUCC {
    pub aShardConnectFlag: [u8; 26],
}
impl FFPacket for sP_LS2CL_REP_SHARD_LIST_INFO_SUCC {}

// custom packets

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_REP_CONNECT_SUCC {
    pub uiSvrTime: u64,
    pub aLS_UID: [u8; 16],
}
impl FFPacket for sP_LS2FE_REP_CONNECT_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_REP_CONNECT_FAIL {
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2FE_REP_CONNECT_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_REQ_LIVE_CHECK {
    pub iTempValue: i32,
}
impl FFPacket for sP_LS2FE_REQ_LIVE_CHECK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_REQ_UPDATE_LOGIN_INFO {
    pub iAccountID: i64,
    pub iEnterSerialKey: i64,
    pub iPC_UID: i64,
    pub uiFEKey: u64,
    pub uiSvrTime: u64,
}
impl FFPacket for sP_LS2FE_REQ_UPDATE_LOGIN_INFO {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_REP_MOTD {
    pub iPC_ID: i32,
    pub szMessage: [u16; 512],
}
impl FFPacket for sP_LS2FE_REP_MOTD {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_ANNOUNCE_MSG {
    pub iAnnounceType: i8,
    pub iDuringTime: i32,
    pub szAnnounceMsg: [u16; 512],
}
impl FFPacket for sP_LS2FE_ANNOUNCE_MSG {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_REP_PC_LOCATION_SUCC {
    pub iPC_ID: i32,
    pub sResp: sP_FE2CL_GM_REP_PC_LOCATION,
}
impl FFPacket for sP_LS2FE_REP_PC_LOCATION_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_REP_PC_LOCATION_FAIL {
    pub iPC_ID: i32,
    pub sReq: sP_CL2FE_GM_REQ_PC_LOCATION,
    pub iErrorCode: i32,
}
impl FFPacket for sP_LS2FE_REP_PC_LOCATION_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_REQ_PC_LOCATION {
    pub iPC_ID: i32,
    pub sReq: sP_CL2FE_GM_REQ_PC_LOCATION,
}
impl FFPacket for sP_LS2FE_REQ_PC_LOCATION {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_REQ_PC_EXIT_DUPLICATE {
    pub iPC_UID: i64,
}
impl FFPacket for sP_LS2FE_REQ_PC_EXIT_DUPLICATE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_REP_LIVE_CHECK {
    pub iTempValue: i32,
}
impl FFPacket for sP_LS2FE_REP_LIVE_CHECK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_LS2FE_REP_AUTH_CHALLENGE {
    pub aChallenge: [u8; AUTH_CHALLENGE_SIZE],
}
impl FFPacket for sP_LS2FE_REP_AUTH_CHALLENGE {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_REQ_CONNECT {
    pub aChallengeSolved: [u8; AUTH_CHALLENGE_SIZE],
    pub iShardID: i32,
}
impl FFPacket for sP_FE2LS_REQ_CONNECT {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_REP_LIVE_CHECK {
    pub iTempValue: i32,
}
impl FFPacket for sP_FE2LS_REP_LIVE_CHECK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_REP_UPDATE_LOGIN_INFO_SUCC {
    pub iEnterSerialKey: i64,
    pub g_FE_ServerIP: [u8; 16],
    pub g_FE_ServerPort: i32,
}
impl FFPacket for sP_FE2LS_REP_UPDATE_LOGIN_INFO_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_REP_UPDATE_LOGIN_INFO_FAIL {
    pub iEnterSerialKey: i64,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2LS_REP_UPDATE_LOGIN_INFO_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_UPDATE_PC_SHARD {
    pub iPC_UID: i64,
    pub ePSS: i8,
}
impl FFPacket for sP_FE2LS_UPDATE_PC_SHARD {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_UPDATE_CHANNEL_STATUSES {
    pub aChannelStatus: [u8; MAX_NUM_CHANNELS],
}
impl FFPacket for sP_FE2LS_UPDATE_CHANNEL_STATUSES {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_REQ_MOTD {
    pub iPC_ID: i32,
}
impl FFPacket for sP_FE2LS_REQ_MOTD {}

#[repr(packed(2))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_MOTD_REGISTER {
    pub szMessage: [u16; 512],
}
impl FFPacket for sP_FE2LS_MOTD_REGISTER {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_ANNOUNCE_MSG {
    pub iAnnounceType: i8,
    pub iDuringTime: i32,
    pub szAnnounceMsg: [u16; 512],
}
impl FFPacket for sP_FE2LS_ANNOUNCE_MSG {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_REQ_PC_LOCATION {
    pub iPC_ID: i32,
    pub sReq: sP_CL2FE_GM_REQ_PC_LOCATION,
}
impl FFPacket for sP_FE2LS_REQ_PC_LOCATION {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_REP_PC_LOCATION_SUCC {
    pub iPC_ID: i32,
    pub sResp: sP_FE2CL_GM_REP_PC_LOCATION,
}
impl FFPacket for sP_FE2LS_REP_PC_LOCATION_SUCC {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_REP_PC_LOCATION_FAIL {
    pub iPC_ID: i32,
    pub sReq: sP_CL2FE_GM_REQ_PC_LOCATION,
    pub iErrorCode: i32,
}
impl FFPacket for sP_FE2LS_REP_PC_LOCATION_FAIL {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_REQ_LIVE_CHECK {
    pub iTempValue: i32,
}
impl FFPacket for sP_FE2LS_REQ_LIVE_CHECK {}

#[repr(packed(4))]
#[repr(C)]
#[derive(Debug, Copy, Clone)]
pub struct sP_FE2LS_REQ_AUTH_CHALLENGE {
    pub iTempValue: i32,
}
impl FFPacket for sP_FE2LS_REQ_AUTH_CHALLENGE {}
